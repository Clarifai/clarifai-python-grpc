"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import proto.clarifai.api.resources_pb2
import proto.clarifai.api.status.status_code_pb2
import proto.clarifai.api.status.status_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _OrganizationInvitationStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OrganizationInvitationStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OrganizationInvitationStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    NOT_SET: _OrganizationInvitationStatus.ValueType  # 0
    PENDING: _OrganizationInvitationStatus.ValueType  # 1
    ACCEPTED: _OrganizationInvitationStatus.ValueType  # 2
    CANCELLED: _OrganizationInvitationStatus.ValueType  # 3
    DECLINED: _OrganizationInvitationStatus.ValueType  # 4
    EXPIRED: _OrganizationInvitationStatus.ValueType  # 5

class OrganizationInvitationStatus(_OrganizationInvitationStatus, metaclass=_OrganizationInvitationStatusEnumTypeWrapper): ...

NOT_SET: OrganizationInvitationStatus.ValueType  # 0
PENDING: OrganizationInvitationStatus.ValueType  # 1
ACCEPTED: OrganizationInvitationStatus.ValueType  # 2
CANCELLED: OrganizationInvitationStatus.ValueType  # 3
DECLINED: OrganizationInvitationStatus.ValueType  # 4
EXPIRED: OrganizationInvitationStatus.ValueType  # 5
global___OrganizationInvitationStatus = OrganizationInvitationStatus

@typing_extensions.final
class Pagination(google.protobuf.message.Message):
    """Split the results into pages."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks. Defaults to 1."""
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults to 128."""
    def __init__(
        self,
        *,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page"]) -> None: ...

global___Pagination = Pagination

@typing_extensions.final
class GetAnnotationRequest(google.protobuf.message.Message):
    """GetAnnotationRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ANNOTATION_ID_FIELD_NUMBER: builtins.int
    INPUT_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    annotation_id: builtins.str
    input_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        annotation_id: builtins.str = ...,
        input_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_id", b"annotation_id", "input_id", b"input_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetAnnotationRequest = GetAnnotationRequest

@typing_extensions.final
class ListAnnotationsRequest(google.protobuf.message.Message):
    """ListAnnotationsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    INPUT_IDS_FIELD_NUMBER: builtins.int
    USER_IDS_FIELD_NUMBER: builtins.int
    MODEL_VERSION_IDS_FIELD_NUMBER: builtins.int
    STATUSES_FIELD_NUMBER: builtins.int
    LIST_ALL_ANNOTATIONS_FIELD_NUMBER: builtins.int
    RETURN_MODEL_OUTPUT_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List annotations for these IDs"""
    @property
    def input_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List annotations for these Input IDs
        Note that 'ids' are optional but if the are provided the number and order in
        'ids' and 'input_ids' should match
        If you do not specify 'ids' all the annotations for 'input_ids' are returned
        If a you do not specify both 'input_ids' and 'ids' all the annotations in the app are returned
        """
    @property
    def user_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Only return the annotations that has one of these user IDs, effectively operating as an
        OR among them to filter down the results.
        If model_version_ids are also provided these user_ids are OR'd with them as well since
        annotations are either provided by users or model versions and we want the union of any
        provided user or model version annotations in the results of ListAnnotations request.
        If no user_ids are provided then annotations from all users are returned.
        """
    @property
    def model_version_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Only return the annotations that has one of these model version IDs, effectively operating as an
        OR among them to filter down the results.
        If user_ids are also provided these model_versions_ids are OR'd with them as well since
        annotations are either provided by users or model versions and we want the union of any
        provided user or model version annotations in the results of ListAnnotations request.
        If no model_version_ids are provided then annotations from all model versions are returned.
        """
    @property
    def statuses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.status.status_pb2.Status]:
        """Set status to filter by a list of statuses
        If not statuses are provided then annotations with any status will be returned.
        """
    list_all_annotations: builtins.bool
    """Set this flag to list both trusted and not trusted annotations
    by default it's listing only trusted annotations
    """
    return_model_output: builtins.bool
    """Set this flag to return the model output for model annotations in the response."""
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    task_id: builtins.str
    """Flag to filter annotations by task_id"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
        input_ids: collections.abc.Iterable[builtins.str] | None = ...,
        user_ids: collections.abc.Iterable[builtins.str] | None = ...,
        model_version_ids: collections.abc.Iterable[builtins.str] | None = ...,
        statuses: collections.abc.Iterable[proto.clarifai.api.status.status_pb2.Status] | None = ...,
        list_all_annotations: builtins.bool = ...,
        return_model_output: builtins.bool = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        task_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "input_ids", b"input_ids", "list_all_annotations", b"list_all_annotations", "model_version_ids", b"model_version_ids", "page", b"page", "per_page", b"per_page", "return_model_output", b"return_model_output", "statuses", b"statuses", "task_id", b"task_id", "user_app_id", b"user_app_id", "user_ids", b"user_ids"]) -> None: ...

global___ListAnnotationsRequest = ListAnnotationsRequest

@typing_extensions.final
class PostAnnotationsRequest(google.protobuf.message.Message):
    """PostAnnotationsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Annotation]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        annotations: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Annotation] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotations", b"annotations", "user_app_id", b"user_app_id"]) -> None: ...

global___PostAnnotationsRequest = PostAnnotationsRequest

@typing_extensions.final
class PatchAnnotationsRequest(google.protobuf.message.Message):
    """PatchAnnotationsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Annotation]: ...
    action: builtins.str
    """The action to perform on the patched objects
    For now actions 'merge', 'overwrite', and 'remove' are supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        annotations: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Annotation] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "annotations", b"annotations", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchAnnotationsRequest = PatchAnnotationsRequest

@typing_extensions.final
class PatchAnnotationsStatusRequest(google.protobuf.message.Message):
    """PatchAnnotationsStatusRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    STATUS_CODE_FIELD_NUMBER: builtins.int
    USER_IDS_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    status_code: proto.clarifai.api.status.status_code_pb2.StatusCode.ValueType
    """Annotation Status code"""
    @property
    def user_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    task_id: builtins.str
    action: builtins.str
    """'overwrite' is supported"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        status_code: proto.clarifai.api.status.status_code_pb2.StatusCode.ValueType = ...,
        user_ids: collections.abc.Iterable[builtins.str] | None = ...,
        task_id: builtins.str = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "status_code", b"status_code", "task_id", b"task_id", "user_app_id", b"user_app_id", "user_ids", b"user_ids"]) -> None: ...

global___PatchAnnotationsStatusRequest = PatchAnnotationsStatusRequest

@typing_extensions.final
class PatchAnnotationsStatusResponse(google.protobuf.message.Message):
    """PatchAnnotationsStatusResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    USER_IDS_FIELD_NUMBER: builtins.int
    UPDATED_COUNT_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def user_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    updated_count: builtins.int
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        user_ids: collections.abc.Iterable[builtins.str] | None = ...,
        updated_count: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "updated_count", b"updated_count", "user_ids", b"user_ids"]) -> None: ...

global___PatchAnnotationsStatusResponse = PatchAnnotationsStatusResponse

@typing_extensions.final
class DeleteAnnotationRequest(google.protobuf.message.Message):
    """DeleteAnnotationRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INPUT_ID_FIELD_NUMBER: builtins.int
    ANNOTATION_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    input_id: builtins.str
    annotation_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        input_id: builtins.str = ...,
        annotation_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_id", b"annotation_id", "input_id", b"input_id", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteAnnotationRequest = DeleteAnnotationRequest

@typing_extensions.final
class DeleteAnnotationsRequest(google.protobuf.message.Message):
    """Request to delete several things by the list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    INPUT_IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Delete annotations with IDs"""
    @property
    def input_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Delete annotations for these Input IDs
        Note that 'ids' are optional but if the are provided the number and order in
        'ids' and 'input_ids' should match
        If you do not specifiy 'ids' all the annotations for 'input_ids' are deleted
        However you need to specify at least one value for 'input_ids'
        i.e. this API does not support deleting all annotations
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
        input_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "input_ids", b"input_ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteAnnotationsRequest = DeleteAnnotationsRequest

@typing_extensions.final
class SingleAnnotationResponse(google.protobuf.message.Message):
    """SingleAnnotationResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    ANNOTATION_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def annotation(self) -> proto.clarifai.api.resources_pb2.Annotation: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        annotation: proto.clarifai.api.resources_pb2.Annotation | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["annotation", b"annotation", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation", b"annotation", "status", b"status"]) -> None: ...

global___SingleAnnotationResponse = SingleAnnotationResponse

@typing_extensions.final
class MultiAnnotationResponse(google.protobuf.message.Message):
    """MultiAnnotationResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Annotation]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        annotations: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Annotation] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotations", b"annotations", "status", b"status"]) -> None: ...

global___MultiAnnotationResponse = MultiAnnotationResponse

@typing_extensions.final
class GetAppRequest(google.protobuf.message.Message):
    """GetAppRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "user_app_id", b"user_app_id"]) -> None: ...

global___GetAppRequest = GetAppRequest

@typing_extensions.final
class ListAppsRequest(google.protobuf.message.Message):
    """ListAppsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    SORT_ASCENDING_FIELD_NUMBER: builtins.int
    SORT_BY_NAME_FIELD_NUMBER: builtins.int
    SORT_BY_MODIFIED_AT_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    FEATURED_ONLY_FIELD_NUMBER: builtins.int
    STARRED_ONLY_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    sort_ascending: builtins.bool
    """Sorting opitons:
    Whether to sort in ascending order. If false, will order in descending order.
    """
    sort_by_name: builtins.bool
    """Whether to order by the name"""
    sort_by_modified_at: builtins.bool
    """Whether to order by the modified_at time.
    If neither sort option is set to true, will sort by modified_at.
    """
    query: builtins.str
    """Filtering options:
    Query various text fields that can contain the words in the query string
    """
    name: builtins.str
    """Filter by the name of the app. This supports wilcard queries like "gen*" to match "general" as an example.
    Deprecated in favor of query
    """
    featured_only: builtins.bool
    """If true, we only return apps that are handpicked by clarifai staff"""
    starred_only: builtins.bool
    """If true, we only return apps that are starred by the requesting user"""
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        sort_ascending: builtins.bool = ...,
        sort_by_name: builtins.bool = ...,
        sort_by_modified_at: builtins.bool = ...,
        query: builtins.str = ...,
        name: builtins.str = ...,
        featured_only: builtins.bool = ...,
        starred_only: builtins.bool = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sort_by", b"sort_by", "sort_by_modified_at", b"sort_by_modified_at", "sort_by_name", b"sort_by_name", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "featured_only", b"featured_only", "name", b"name", "page", b"page", "per_page", b"per_page", "query", b"query", "sort_ascending", b"sort_ascending", "sort_by", b"sort_by", "sort_by_modified_at", b"sort_by_modified_at", "sort_by_name", b"sort_by_name", "starred_only", b"starred_only", "user_app_id", b"user_app_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["sort_by", b"sort_by"]) -> typing_extensions.Literal["sort_by_name", "sort_by_modified_at"] | None: ...

global___ListAppsRequest = ListAppsRequest

@typing_extensions.final
class PostAppsRequest(google.protobuf.message.Message):
    """PostAppsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    APPS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def apps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.App]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        apps: collections.abc.Iterable[proto.clarifai.api.resources_pb2.App] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["apps", b"apps", "user_app_id", b"user_app_id"]) -> None: ...

global___PostAppsRequest = PostAppsRequest

@typing_extensions.final
class DeleteAppRequest(google.protobuf.message.Message):
    """DeleteAppRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> None: ...

global___DeleteAppRequest = DeleteAppRequest

@typing_extensions.final
class PatchAppsRequest(google.protobuf.message.Message):
    """PatchAppsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    APPS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    METADATA_ACTION_FIELD_NUMBER: builtins.int
    REINDEX_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def apps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.App]: ...
    action: builtins.str
    """The action to perform on the patched App objects except App.Metadata
    For now only action 'overwrite' is supported
    """
    @property
    def metadata_action(self) -> proto.clarifai.api.resources_pb2.PatchAction:
        """The action to perform on the patched App.Metadata"""
    reindex: builtins.bool
    """If set, the app will be automatically reindexed upon change of its base workflow."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        apps: collections.abc.Iterable[proto.clarifai.api.resources_pb2.App] | None = ...,
        action: builtins.str = ...,
        metadata_action: proto.clarifai.api.resources_pb2.PatchAction | None = ...,
        reindex: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata_action", b"metadata_action", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "apps", b"apps", "metadata_action", b"metadata_action", "reindex", b"reindex", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchAppsRequest = PatchAppsRequest

@typing_extensions.final
class PatchAppRequest(google.protobuf.message.Message):
    """PatchAppRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    APP_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    METADATA_ACTION_FIELD_NUMBER: builtins.int
    REINDEX_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def app(self) -> proto.clarifai.api.resources_pb2.App: ...
    action: builtins.str
    """The action to perform on the patched App object except App.Metadata
    For now only action 'overwrite' is supported
    """
    @property
    def metadata_action(self) -> proto.clarifai.api.resources_pb2.PatchAction:
        """The action to perform on the patched App.Metadata"""
    reindex: builtins.bool
    """If set, the app will be automatically reindexed upon change of its base workflow."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        app: proto.clarifai.api.resources_pb2.App | None = ...,
        action: builtins.str = ...,
        metadata_action: proto.clarifai.api.resources_pb2.PatchAction | None = ...,
        reindex: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app", b"app", "metadata_action", b"metadata_action", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "app", b"app", "metadata_action", b"metadata_action", "reindex", b"reindex", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchAppRequest = PatchAppRequest

@typing_extensions.final
class PatchAppsIdsRequest(google.protobuf.message.Message):
    """PatchAppsIdsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IdUpdateSource]:
        """Array containing 1 entry"""
    action: builtins.str
    """The action to perform on the patched objects
    Only 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[global___IdUpdateSource] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchAppsIdsRequest = PatchAppsIdsRequest

@typing_extensions.final
class PostAppsSearchesRequest(google.protobuf.message.Message):
    """Search over the available applications."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    APP_QUERY_FIELD_NUMBER: builtins.int
    PAGINATION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def app_query(self) -> proto.clarifai.api.resources_pb2.AppQuery:
        """The body of the request."""
    @property
    def pagination(self) -> global___Pagination:
        """Pagination parameters here since there are no url args in this
        POST request.
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        app_query: proto.clarifai.api.resources_pb2.AppQuery | None = ...,
        pagination: global___Pagination | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app_query", b"app_query", "pagination", b"pagination", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_query", b"app_query", "pagination", b"pagination", "user_app_id", b"user_app_id"]) -> None: ...

global___PostAppsSearchesRequest = PostAppsSearchesRequest

@typing_extensions.final
class SingleAppResponse(google.protobuf.message.Message):
    """SingleAppResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    APP_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def app(self) -> proto.clarifai.api.resources_pb2.App: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        app: proto.clarifai.api.resources_pb2.App | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app", b"app", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app", b"app", "status", b"status"]) -> None: ...

global___SingleAppResponse = SingleAppResponse

@typing_extensions.final
class MultiAppResponse(google.protobuf.message.Message):
    """MultiAppResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    APPS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def apps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.App]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        apps: collections.abc.Iterable[proto.clarifai.api.resources_pb2.App] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["apps", b"apps", "status", b"status"]) -> None: ...

global___MultiAppResponse = MultiAppResponse

@typing_extensions.final
class ListCollaboratorsRequest(google.protobuf.message.Message):
    """ListCollaboratorsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    LIST_ALL_COLLABORATORS_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    list_all_collaborators: builtins.bool
    """Set this flag to list both deleted and not deleted collaborators
    by default it's listing only not deleted collaborators
    """
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        list_all_collaborators: builtins.bool = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["list_all_collaborators", b"list_all_collaborators", "page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListCollaboratorsRequest = ListCollaboratorsRequest

@typing_extensions.final
class PostCollaboratorsRequest(google.protobuf.message.Message):
    """PostCollaboratorsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    COLLABORATORS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def collaborators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Collaborator]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        collaborators: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Collaborator] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collaborators", b"collaborators", "user_app_id", b"user_app_id"]) -> None: ...

global___PostCollaboratorsRequest = PostCollaboratorsRequest

@typing_extensions.final
class PatchCollaboratorsRequest(google.protobuf.message.Message):
    """PatchCollaboratorsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    COLLABORATORS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def collaborators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Collaborator]: ...
    action: builtins.str
    """The action to perform on the patched objects
    For now only action 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        collaborators: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Collaborator] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "collaborators", b"collaborators", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchCollaboratorsRequest = PatchCollaboratorsRequest

@typing_extensions.final
class DeleteCollaboratorsRequest(google.protobuf.message.Message):
    """DeleteCollaboratorsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    COLLABORATOR_IDS_FIELD_NUMBER: builtins.int
    USER_EMAILS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def collaborator_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def user_emails(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        collaborator_ids: collections.abc.Iterable[builtins.str] | None = ...,
        user_emails: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collaborator_ids", b"collaborator_ids", "user_app_id", b"user_app_id", "user_emails", b"user_emails"]) -> None: ...

global___DeleteCollaboratorsRequest = DeleteCollaboratorsRequest

@typing_extensions.final
class MultiCollaboratorsResponse(google.protobuf.message.Message):
    """MultiCollaboratorsResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    COLLABORATORS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def collaborators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Collaborator]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        collaborators: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Collaborator] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collaborators", b"collaborators", "status", b"status"]) -> None: ...

global___MultiCollaboratorsResponse = MultiCollaboratorsResponse

@typing_extensions.final
class ListCollaborationsRequest(google.protobuf.message.Message):
    """ListCollaborationsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListCollaborationsRequest = ListCollaborationsRequest

@typing_extensions.final
class MultiCollaborationsResponse(google.protobuf.message.Message):
    """MultiCollaborationsResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    COLLABORATIONS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def collaborations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Collaboration]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        collaborations: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Collaboration] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collaborations", b"collaborations", "status", b"status"]) -> None: ...

global___MultiCollaborationsResponse = MultiCollaborationsResponse

@typing_extensions.final
class GetStatusCodeRequest(google.protobuf.message.Message):
    """GetStatusCodeRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_CODE_ID_FIELD_NUMBER: builtins.int
    status_code_id: builtins.str
    def __init__(
        self,
        *,
        status_code_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["status_code_id", b"status_code_id"]) -> None: ...

global___GetStatusCodeRequest = GetStatusCodeRequest

@typing_extensions.final
class ListStatusCodesRequest(google.protobuf.message.Message):
    """ListStatusCodesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListStatusCodesRequest = ListStatusCodesRequest

@typing_extensions.final
class SingleStatusCodeResponse(google.protobuf.message.Message):
    """SingleStatusCodeResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """Status of this request."""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status"]) -> None: ...

global___SingleStatusCodeResponse = SingleStatusCodeResponse

@typing_extensions.final
class MultiStatusCodeResponse(google.protobuf.message.Message):
    """MultiStatusCodeResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    STATUSES_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def statuses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.status.status_pb2.Status]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        statuses: collections.abc.Iterable[proto.clarifai.api.status.status_pb2.Status] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "statuses", b"statuses"]) -> None: ...

global___MultiStatusCodeResponse = MultiStatusCodeResponse

@typing_extensions.final
class GetConceptRequest(google.protobuf.message.Message):
    """GetConceptRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPT_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    concept_id: builtins.str
    """The concept's id."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concept_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_id", b"concept_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetConceptRequest = GetConceptRequest

@typing_extensions.final
class ListConceptsRequest(google.protobuf.message.Message):
    """ListConceptsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListConceptsRequest = ListConceptsRequest

@typing_extensions.final
class ListModelConceptsRequest(google.protobuf.message.Message):
    """ListModelConceptsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    """Model id"""
    version_id: builtins.str
    """Model version Id. Optional, if not provided latest model version is used."""
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        version_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_id", b"model_id", "page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id", "version_id", b"version_id"]) -> None: ...

global___ListModelConceptsRequest = ListModelConceptsRequest

@typing_extensions.final
class PostConceptsSearchesRequest(google.protobuf.message.Message):
    """PostConceptsSearchesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPT_QUERY_FIELD_NUMBER: builtins.int
    PAGINATION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """Ids present in the url of the request."""
    @property
    def concept_query(self) -> proto.clarifai.api.resources_pb2.ConceptQuery:
        """The body of the request."""
    @property
    def pagination(self) -> global___Pagination:
        """Pagination parameters here since there are no url args in this
        POST request.
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concept_query: proto.clarifai.api.resources_pb2.ConceptQuery | None = ...,
        pagination: global___Pagination | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["concept_query", b"concept_query", "pagination", b"pagination", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_query", b"concept_query", "pagination", b"pagination", "user_app_id", b"user_app_id"]) -> None: ...

global___PostConceptsSearchesRequest = PostConceptsSearchesRequest

@typing_extensions.final
class PostConceptsRequest(google.protobuf.message.Message):
    """PostConceptsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPTS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def concepts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Concept]:
        """The concepts to add."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concepts: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Concept] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concepts", b"concepts", "user_app_id", b"user_app_id"]) -> None: ...

global___PostConceptsRequest = PostConceptsRequest

@typing_extensions.final
class PatchConceptsRequest(google.protobuf.message.Message):
    """PatchConceptsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPTS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def concepts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Concept]:
        """The concepts to patch."""
    action: builtins.str
    """The action to perform on the patched objects
    For now ony action 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concepts: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Concept] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "concepts", b"concepts", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchConceptsRequest = PatchConceptsRequest

@typing_extensions.final
class GetConceptCountsRequest(google.protobuf.message.Message):
    """GetConceptCountsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___GetConceptCountsRequest = GetConceptCountsRequest

@typing_extensions.final
class SingleConceptResponse(google.protobuf.message.Message):
    """SingleConceptResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    CONCEPT_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The response status."""
    @property
    def concept(self) -> proto.clarifai.api.resources_pb2.Concept:
        """The returned concept."""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        concept: proto.clarifai.api.resources_pb2.Concept | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["concept", b"concept", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept", b"concept", "status", b"status"]) -> None: ...

global___SingleConceptResponse = SingleConceptResponse

@typing_extensions.final
class MultiConceptResponse(google.protobuf.message.Message):
    """MultiConceptResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    CONCEPTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The response status."""
    @property
    def concepts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Concept]:
        """The returned concepts."""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        concepts: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Concept] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concepts", b"concepts", "status", b"status"]) -> None: ...

global___MultiConceptResponse = MultiConceptResponse

@typing_extensions.final
class MultiConceptCountResponse(google.protobuf.message.Message):
    """MultiConceptCountResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    CONCEPT_COUNTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The response status."""
    @property
    def concept_counts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ConceptCount]:
        """The returned concept counts."""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        concept_counts: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ConceptCount] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_counts", b"concept_counts", "status", b"status"]) -> None: ...

global___MultiConceptCountResponse = MultiConceptCountResponse

@typing_extensions.final
class ListConceptRelationsRequest(google.protobuf.message.Message):
    """GET all relations such that the concept_id refers to the subject of the relation"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPT_ID_FIELD_NUMBER: builtins.int
    PREDICATE_FIELD_NUMBER: builtins.int
    KNOWLEDGE_GRAPH_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id information."""
    concept_id: builtins.str
    """The subject concept id in your app to get all the relationships for.
    Leave as an empty string (GET /concepts/relations) to list ALL the relations in the app.

    When listing all the relations it will only return one direction of the relationship
    with the predicate acting on the subject and not the inverse like is done when providing a
    concept_id so that we can return a reliable page size always.

    When providing a concept_id, if a hyponym is present in the DB such as:
    'honey' (subject), 'hyponym' (predict for "is a kind of"), 'food' (object)
    then you can list the concept relations for 'honey' and get hyponym predicate with 'food'
    object.
    But you can also list the concept relations for 'food' and it will return the same hyponym
    relationship with 'honey' as subject and 'food' as predicate.
    Synonyms by nature are symmetrical relationships so either side can be the concept_id (subject)
    when listing the relations.
    """
    predicate: builtins.str
    """This is part of the url so we can extend to multiple link types in the future.
    Valid predicates are:
    'hypernyms'
    'hyponyms'
    """
    knowledge_graph_id: builtins.str
    """If knowledge_graph_id is provided then just list relations from that knowledge graph.
    If not provided then list relations from all knowledge graphs including the global one for this
    app one (ie. knowledge_graph "") and any specific ones in the app.
    """
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concept_id: builtins.str = ...,
        predicate: builtins.str = ...,
        knowledge_graph_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_id", b"concept_id", "knowledge_graph_id", b"knowledge_graph_id", "page", b"page", "per_page", b"per_page", "predicate", b"predicate", "user_app_id", b"user_app_id"]) -> None: ...

global___ListConceptRelationsRequest = ListConceptRelationsRequest

@typing_extensions.final
class PostConceptRelationsRequest(google.protobuf.message.Message):
    """POST new concept relations"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPT_ID_FIELD_NUMBER: builtins.int
    CONCEPT_RELATIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id information."""
    concept_id: builtins.str
    """The subject concept id you're going to add relations for."""
    @property
    def concept_relations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ConceptRelation]:
        """The relationships you're going to add."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concept_id: builtins.str = ...,
        concept_relations: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ConceptRelation] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_id", b"concept_id", "concept_relations", b"concept_relations", "user_app_id", b"user_app_id"]) -> None: ...

global___PostConceptRelationsRequest = PostConceptRelationsRequest

@typing_extensions.final
class DeleteConceptRelationsRequest(google.protobuf.message.Message):
    """DELETE concept relations"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPT_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id information."""
    concept_id: builtins.str
    """The concept to delete relationship for."""
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The concept relationship ids to delete."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concept_id: builtins.str = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_id", b"concept_id", "ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteConceptRelationsRequest = DeleteConceptRelationsRequest

@typing_extensions.final
class ListKnowledgeGraphsRequest(google.protobuf.message.Message):
    """GET all knowledge graphs"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id information."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> None: ...

global___ListKnowledgeGraphsRequest = ListKnowledgeGraphsRequest

@typing_extensions.final
class PostKnowledgeGraphsRequest(google.protobuf.message.Message):
    """POST new knowledge graphs"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    KNOWLEDGE_GRAPHS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id information."""
    @property
    def knowledge_graphs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.KnowledgeGraph]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        knowledge_graphs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.KnowledgeGraph] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["knowledge_graphs", b"knowledge_graphs", "user_app_id", b"user_app_id"]) -> None: ...

global___PostKnowledgeGraphsRequest = PostKnowledgeGraphsRequest

@typing_extensions.final
class PostConceptMappingJobsRequest(google.protobuf.message.Message):
    """Start concept mapping jobs"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPT_MAPPING_JOBS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id information."""
    @property
    def concept_mapping_jobs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ConceptMappingJob]:
        """The concept mapping jobs that are being started"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concept_mapping_jobs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ConceptMappingJob] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_mapping_jobs", b"concept_mapping_jobs", "user_app_id", b"user_app_id"]) -> None: ...

global___PostConceptMappingJobsRequest = PostConceptMappingJobsRequest

@typing_extensions.final
class MultiConceptRelationResponse(google.protobuf.message.Message):
    """MultiConceptRelationResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    CONCEPT_RELATIONS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The response status."""
    @property
    def concept_relations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ConceptRelation]:
        """The returned concept relations."""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        concept_relations: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ConceptRelation] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_relations", b"concept_relations", "status", b"status"]) -> None: ...

global___MultiConceptRelationResponse = MultiConceptRelationResponse

@typing_extensions.final
class MultiKnowledgeGraphResponse(google.protobuf.message.Message):
    """MultiKnowledgeGraphResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    KNOWLEDGE_GRAPHS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The response status."""
    @property
    def knowledge_graphs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.KnowledgeGraph]:
        """The returned knowledge graphs."""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        knowledge_graphs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.KnowledgeGraph] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["knowledge_graphs", b"knowledge_graphs", "status", b"status"]) -> None: ...

global___MultiKnowledgeGraphResponse = MultiKnowledgeGraphResponse

@typing_extensions.final
class MultiConceptMappingJobResponse(google.protobuf.message.Message):
    """MultiConceptMappingJobResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The response status."""
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The ids of the concept mapping jobs underway."""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "status", b"status"]) -> None: ...

global___MultiConceptMappingJobResponse = MultiConceptMappingJobResponse

@typing_extensions.final
class GetConceptLanguageRequest(google.protobuf.message.Message):
    """GET single concept language for the given concept."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPT_ID_FIELD_NUMBER: builtins.int
    LANGUAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    concept_id: builtins.str
    language: builtins.str
    """This is the language identifier."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concept_id: builtins.str = ...,
        language: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_id", b"concept_id", "language", b"language", "user_app_id", b"user_app_id"]) -> None: ...

global___GetConceptLanguageRequest = GetConceptLanguageRequest

@typing_extensions.final
class ListConceptLanguagesRequest(google.protobuf.message.Message):
    """List multiple concept languages for the given concept."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPT_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    concept_id: builtins.str
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concept_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_id", b"concept_id", "page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListConceptLanguagesRequest = ListConceptLanguagesRequest

@typing_extensions.final
class PatchConceptLanguagesRequest(google.protobuf.message.Message):
    """PATCH multiple concept languages for the given concept."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPT_ID_FIELD_NUMBER: builtins.int
    CONCEPT_LANGUAGES_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    concept_id: builtins.str
    @property
    def concept_languages(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ConceptLanguage]: ...
    action: builtins.str
    """The action to perform with the objects in the PATCH."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concept_id: builtins.str = ...,
        concept_languages: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ConceptLanguage] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "concept_id", b"concept_id", "concept_languages", b"concept_languages", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchConceptLanguagesRequest = PatchConceptLanguagesRequest

@typing_extensions.final
class PostConceptLanguagesRequest(google.protobuf.message.Message):
    """// DELETE multiple concept languages for the given concept.
    message DeleteConceptLanguagesRequest {
      clarifai.api.UserAppIDSet user_app_id = 1;
      string concept_id = 2;
      // The language code(s) to delete.
      string ids = 3;
      bool delete_all = 4;
    }

    POST multiple concept languages for the given concept.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    CONCEPT_ID_FIELD_NUMBER: builtins.int
    CONCEPT_LANGUAGES_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    concept_id: builtins.str
    @property
    def concept_languages(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ConceptLanguage]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        concept_id: builtins.str = ...,
        concept_languages: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ConceptLanguage] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_id", b"concept_id", "concept_languages", b"concept_languages", "user_app_id", b"user_app_id"]) -> None: ...

global___PostConceptLanguagesRequest = PostConceptLanguagesRequest

@typing_extensions.final
class SingleConceptLanguageResponse(google.protobuf.message.Message):
    """SingleConceptLanguageResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    CONCEPT_LANGUAGE_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def concept_language(self) -> proto.clarifai.api.resources_pb2.ConceptLanguage: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        concept_language: proto.clarifai.api.resources_pb2.ConceptLanguage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["concept_language", b"concept_language", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_language", b"concept_language", "status", b"status"]) -> None: ...

global___SingleConceptLanguageResponse = SingleConceptLanguageResponse

@typing_extensions.final
class MultiConceptLanguageResponse(google.protobuf.message.Message):
    """MultiConceptLanguageResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    CONCEPT_LANGUAGES_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def concept_languages(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ConceptLanguage]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        concept_languages: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ConceptLanguage] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_languages", b"concept_languages", "status", b"status"]) -> None: ...

global___MultiConceptLanguageResponse = MultiConceptLanguageResponse

@typing_extensions.final
class GetInputRequest(google.protobuf.message.Message):
    """GetInputRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INPUT_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    input_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        input_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_id", b"input_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetInputRequest = GetInputRequest

@typing_extensions.final
class GetVideoManifestRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INPUT_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    input_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        input_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_id", b"input_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetVideoManifestRequest = GetVideoManifestRequest

@typing_extensions.final
class GetInputSamplesRequest(google.protobuf.message.Message):
    """GetInputSamplesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    USER_IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    task_id: builtins.str
    @property
    def user_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """URL param. If zero ids provided, returns for all task labelers"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        task_id: builtins.str = ...,
        user_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["task_id", b"task_id", "user_app_id", b"user_app_id", "user_ids", b"user_ids"]) -> None: ...

global___GetInputSamplesRequest = GetInputSamplesRequest

@typing_extensions.final
class ListInputsRequest(google.protobuf.message.Message):
    """ListInputsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """Set status to filter by status"""
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "page", b"page", "per_page", b"per_page", "status", b"status", "user_app_id", b"user_app_id"]) -> None: ...

global___ListInputsRequest = ListInputsRequest

@typing_extensions.final
class StreamInputsRequest(google.protobuf.message.Message):
    """StreamInputsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    LAST_ID_FIELD_NUMBER: builtins.int
    ORDER_BY_ID_FIELD_NUMBER: builtins.int
    DESCENDING_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 20.
    """
    last_id: builtins.str
    order_by_id: builtins.bool
    """By default, the endpoint return inputs by the time when it is added.
    If this is set to true, we will return inputs by id.
    """
    descending: builtins.bool
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        per_page: builtins.int = ...,
        last_id: builtins.str = ...,
        order_by_id: builtins.bool = ...,
        descending: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["descending", b"descending", "last_id", b"last_id", "order_by_id", b"order_by_id", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___StreamInputsRequest = StreamInputsRequest

@typing_extensions.final
class PostInputsRequest(google.protobuf.message.Message):
    """PostInputsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    INPUTS_ADD_JOB_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Input]:
        """List of inputs to post.
        For each input, the following fields are used:
        * id
        * data
        * dataset_ids
        """
    inputs_add_job_id: builtins.str
    """Collect statistics about created inputs in job with given ID.
    * If job ID is empty, then job is not created.
    * If job ID is non-empty and doesn't already exist, then a new job will be created with given ID.
    * If job ID does already exist, then new inputs statistics are merged with previous inputs statistics.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        inputs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Input] | None = ...,
        inputs_add_job_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs", b"inputs", "inputs_add_job_id", b"inputs_add_job_id", "user_app_id", b"user_app_id"]) -> None: ...

global___PostInputsRequest = PostInputsRequest

@typing_extensions.final
class PatchInputsRequest(google.protobuf.message.Message):
    """PatchInputsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Input]:
        """List of inputs to patch.
        Inputs are identified by id field.
        For each input, the following fields are patchable:
        * data
        """
    action: builtins.str
    """The action to perform on the patched objects
    For now actions 'merge', 'overwrite', and 'remove' are supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        inputs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Input] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "inputs", b"inputs", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchInputsRequest = PatchInputsRequest

@typing_extensions.final
class DeleteInputRequest(google.protobuf.message.Message):
    """DeleteInputRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INPUT_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    input_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        input_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_id", b"input_id", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteInputRequest = DeleteInputRequest

@typing_extensions.final
class DeleteInputsRequest(google.protobuf.message.Message):
    """Request to delete several things by the list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteInputsRequest = DeleteInputsRequest

@typing_extensions.final
class SingleInputResponse(google.protobuf.message.Message):
    """SingleInputResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def input(self) -> proto.clarifai.api.resources_pb2.Input: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        input: proto.clarifai.api.resources_pb2.Input | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["input", b"input", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input", b"input", "status", b"status"]) -> None: ...

global___SingleInputResponse = SingleInputResponse

@typing_extensions.final
class GetVideoManifestResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MANIFEST_URL_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    manifest_url: builtins.str
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        manifest_url: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["manifest_url", b"manifest_url", "status", b"status"]) -> None: ...

global___GetVideoManifestResponse = GetVideoManifestResponse

@typing_extensions.final
class MultiInputResponse(google.protobuf.message.Message):
    """MultiInputResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    INPUTS_ADD_JOB_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Input]: ...
    @property
    def inputs_add_job(self) -> proto.clarifai.api.resources_pb2.InputsAddJob: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        inputs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Input] | None = ...,
        inputs_add_job: proto.clarifai.api.resources_pb2.InputsAddJob | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["inputs_add_job", b"inputs_add_job", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs", b"inputs", "inputs_add_job", b"inputs_add_job", "status", b"status"]) -> None: ...

global___MultiInputResponse = MultiInputResponse

@typing_extensions.final
class MultiInputAnnotationResponse(google.protobuf.message.Message):
    """MultiInputAnnotationResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    HITS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def hits(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Hit]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        hits: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Hit] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hits", b"hits", "status", b"status"]) -> None: ...

global___MultiInputAnnotationResponse = MultiInputAnnotationResponse

@typing_extensions.final
class SingleInputCountResponse(google.protobuf.message.Message):
    """SingleInputCountResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    COUNTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def counts(self) -> proto.clarifai.api.resources_pb2.InputCount: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        counts: proto.clarifai.api.resources_pb2.InputCount | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["counts", b"counts", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["counts", b"counts", "status", b"status"]) -> None: ...

global___SingleInputCountResponse = SingleInputCountResponse

@typing_extensions.final
class GetInputCountRequest(google.protobuf.message.Message):
    """GetInputCountRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> None: ...

global___GetInputCountRequest = GetInputCountRequest

@typing_extensions.final
class ListDatasetsRequest(google.protobuf.message.Message):
    """ListDatasetsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    STARRED_ONLY_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    starred_only: builtins.bool
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        starred_only: builtins.bool = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "page", b"page", "per_page", b"per_page", "starred_only", b"starred_only", "user_app_id", b"user_app_id"]) -> None: ...

global___ListDatasetsRequest = ListDatasetsRequest

@typing_extensions.final
class GetDatasetRequest(google.protobuf.message.Message):
    """GetDatasetRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "dataset_id", b"dataset_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetDatasetRequest = GetDatasetRequest

@typing_extensions.final
class PostDatasetsRequest(google.protobuf.message.Message):
    """Request to add one or more datasets."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASETS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def datasets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Dataset]:
        """List of datasets that are requested to be added."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        datasets: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Dataset] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["datasets", b"datasets", "user_app_id", b"user_app_id"]) -> None: ...

global___PostDatasetsRequest = PostDatasetsRequest

@typing_extensions.final
class PatchDatasetsRequest(google.protobuf.message.Message):
    """Request to patch several datasets."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASETS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def datasets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Dataset]:
        """List of datasets that are requested to be updated."""
    action: builtins.str
    """The action to perform on the patched objects
    Supported values: 'overwrite' and 'merge'
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        datasets: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Dataset] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "datasets", b"datasets", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchDatasetsRequest = PatchDatasetsRequest

@typing_extensions.final
class PatchDatasetIdsRequest(google.protobuf.message.Message):
    """PatchDatasetIdsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IdUpdateSource]:
        """Array containing 1 entry"""
    action: builtins.str
    """The action to perform on the patched objects
    Only 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[global___IdUpdateSource] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchDatasetIdsRequest = PatchDatasetIdsRequest

@typing_extensions.final
class DeleteDatasetsRequest(google.protobuf.message.Message):
    """Request to delete several datasets by list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def dataset_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_ids", b"dataset_ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteDatasetsRequest = DeleteDatasetsRequest

@typing_extensions.final
class MultiDatasetResponse(google.protobuf.message.Message):
    """MultiDatasetResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATASETS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def datasets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Dataset]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        datasets: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Dataset] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["datasets", b"datasets", "status", b"status"]) -> None: ...

global___MultiDatasetResponse = MultiDatasetResponse

@typing_extensions.final
class SingleDatasetResponse(google.protobuf.message.Message):
    """SingleDatasetResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATASET_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def dataset(self) -> proto.clarifai.api.resources_pb2.Dataset: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        dataset: proto.clarifai.api.resources_pb2.Dataset | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset", b"dataset", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset", b"dataset", "status", b"status"]) -> None: ...

global___SingleDatasetResponse = SingleDatasetResponse

@typing_extensions.final
class ListDatasetInputsRequest(google.protobuf.message.Message):
    """ListDatasetInputsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListDatasetInputsRequest = ListDatasetInputsRequest

@typing_extensions.final
class GetDatasetInputRequest(google.protobuf.message.Message):
    """GetDatasetInputRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    INPUT_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    input_id: builtins.str
    """Identify dataset input by id."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        input_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "input_id", b"input_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetDatasetInputRequest = GetDatasetInputRequest

@typing_extensions.final
class PostDatasetInputsRequest(google.protobuf.message.Message):
    """Request to add one or more datasets."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DATASET_INPUTS_FIELD_NUMBER: builtins.int
    SEARCH_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    @property
    def dataset_inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.DatasetInput]:
        """List of inputs that are requested to be added to this dataset.
        Identify each input by id field. All other inputs fields are ignored.
        """
    @property
    def search(self) -> proto.clarifai.api.resources_pb2.Search:
        """Query to search inputs to be added to this dataset."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        dataset_inputs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.DatasetInput] | None = ...,
        search: proto.clarifai.api.resources_pb2.Search | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["search", b"search", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "dataset_inputs", b"dataset_inputs", "search", b"search", "user_app_id", b"user_app_id"]) -> None: ...

global___PostDatasetInputsRequest = PostDatasetInputsRequest

@typing_extensions.final
class DeleteDatasetInputsRequest(google.protobuf.message.Message):
    """Request to delete several dataset inputs by list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    INPUT_IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    @property
    def input_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Specify which inputs to delete from dataset."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        input_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "input_ids", b"input_ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteDatasetInputsRequest = DeleteDatasetInputsRequest

@typing_extensions.final
class MultiDatasetInputResponse(google.protobuf.message.Message):
    """MultiDatasetInputResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATASET_INPUTS_FIELD_NUMBER: builtins.int
    DATASET_INPUTS_SEARCH_ADD_JOB_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def dataset_inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.DatasetInput]: ...
    @property
    def dataset_inputs_search_add_job(self) -> proto.clarifai.api.resources_pb2.DatasetInputsSearchAddJob: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        dataset_inputs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.DatasetInput] | None = ...,
        dataset_inputs_search_add_job: proto.clarifai.api.resources_pb2.DatasetInputsSearchAddJob | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_inputs_search_add_job", b"dataset_inputs_search_add_job", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_inputs", b"dataset_inputs", "dataset_inputs_search_add_job", b"dataset_inputs_search_add_job", "status", b"status"]) -> None: ...

global___MultiDatasetInputResponse = MultiDatasetInputResponse

@typing_extensions.final
class SingleDatasetInputResponse(google.protobuf.message.Message):
    """SingleDatasetInputResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATASET_INPUT_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def dataset_input(self) -> proto.clarifai.api.resources_pb2.DatasetInput: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        dataset_input: proto.clarifai.api.resources_pb2.DatasetInput | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_input", b"dataset_input", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_input", b"dataset_input", "status", b"status"]) -> None: ...

global___SingleDatasetInputResponse = SingleDatasetInputResponse

@typing_extensions.final
class ListDatasetVersionsRequest(google.protobuf.message.Message):
    """ListDatasetVersionsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListDatasetVersionsRequest = ListDatasetVersionsRequest

@typing_extensions.final
class GetDatasetVersionRequest(google.protobuf.message.Message):
    """GetDatasetVersionRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DATASET_VERSION_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    dataset_version_id: builtins.str
    """Identify dataset version by id."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        dataset_version_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "dataset_version_id", b"dataset_version_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetDatasetVersionRequest = GetDatasetVersionRequest

@typing_extensions.final
class ListDatasetVersionMetricsGroupsRequest(google.protobuf.message.Message):
    """ListDatasetVersionMetricsGroupsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DATASET_VERSION_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    PARENT_PATHS_FIELD_NUMBER: builtins.int
    TYPES_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    dataset_version_id: builtins.str
    """Identify dataset version by id."""
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    @property
    def parent_paths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Filter by parent path. Multiple parent paths are OR-ed. Empty list results in no filter."""
    @property
    def types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[proto.clarifai.api.resources_pb2.DatasetVersionMetricsGroupType.ValueType]:
        """Filter by parent type. Multiple types are OR-ed. Empty list results in no filter."""
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.struct_pb2.Value]:
        """Filter by value. Multiple values are OR-ed. Empty list results in no filter."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        dataset_version_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        parent_paths: collections.abc.Iterable[builtins.str] | None = ...,
        types: collections.abc.Iterable[proto.clarifai.api.resources_pb2.DatasetVersionMetricsGroupType.ValueType] | None = ...,
        values: collections.abc.Iterable[google.protobuf.struct_pb2.Value] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "dataset_version_id", b"dataset_version_id", "page", b"page", "parent_paths", b"parent_paths", "per_page", b"per_page", "types", b"types", "user_app_id", b"user_app_id", "values", b"values"]) -> None: ...

global___ListDatasetVersionMetricsGroupsRequest = ListDatasetVersionMetricsGroupsRequest

@typing_extensions.final
class PostDatasetVersionsRequest(google.protobuf.message.Message):
    """Request to add one or more dataset versions."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DATASET_VERSIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    @property
    def dataset_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.DatasetVersion]:
        """List of dataset versions that are requested to be added."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        dataset_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.DatasetVersion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "dataset_versions", b"dataset_versions", "user_app_id", b"user_app_id"]) -> None: ...

global___PostDatasetVersionsRequest = PostDatasetVersionsRequest

@typing_extensions.final
class PatchDatasetVersionsRequest(google.protobuf.message.Message):
    """Request to patch several dataset versions."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DATASET_VERSIONS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    @property
    def dataset_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.DatasetVersion]:
        """List of dataset versions that are requested to be updated."""
    action: builtins.str
    """The action to perform on the patched objects
    For now, only 'overwrite' action is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        dataset_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.DatasetVersion] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "dataset_id", b"dataset_id", "dataset_versions", b"dataset_versions", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchDatasetVersionsRequest = PatchDatasetVersionsRequest

@typing_extensions.final
class DeleteDatasetVersionsRequest(google.protobuf.message.Message):
    """Request to delete several dataset versions by list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DATASET_VERSION_IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    @property
    def dataset_version_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        dataset_version_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "dataset_version_ids", b"dataset_version_ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteDatasetVersionsRequest = DeleteDatasetVersionsRequest

@typing_extensions.final
class PutDatasetVersionExportsRequest(google.protobuf.message.Message):
    """Request to create exports of a dataset version."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    DATASET_VERSION_ID_FIELD_NUMBER: builtins.int
    EXPORTS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    dataset_id: builtins.str
    """Identify dataset by id."""
    dataset_version_id: builtins.str
    """Identify dataset version by id."""
    @property
    def exports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.DatasetVersionExport]:
        """exports is the list of requested dataset version exports.
        Only setting the 'format' field of the export is supported.
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        dataset_id: builtins.str = ...,
        dataset_version_id: builtins.str = ...,
        exports: collections.abc.Iterable[proto.clarifai.api.resources_pb2.DatasetVersionExport] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "dataset_version_id", b"dataset_version_id", "exports", b"exports", "user_app_id", b"user_app_id"]) -> None: ...

global___PutDatasetVersionExportsRequest = PutDatasetVersionExportsRequest

@typing_extensions.final
class MultiDatasetVersionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATASET_VERSIONS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def dataset_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.DatasetVersion]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        dataset_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.DatasetVersion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_versions", b"dataset_versions", "status", b"status"]) -> None: ...

global___MultiDatasetVersionResponse = MultiDatasetVersionResponse

@typing_extensions.final
class MultiDatasetVersionExportResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    EXPORTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def exports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.DatasetVersionExport]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        exports: collections.abc.Iterable[proto.clarifai.api.resources_pb2.DatasetVersionExport] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["exports", b"exports", "status", b"status"]) -> None: ...

global___MultiDatasetVersionExportResponse = MultiDatasetVersionExportResponse

@typing_extensions.final
class MultiDatasetVersionMetricsGroupResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATASET_VERSION_METRICS_GROUPS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def dataset_version_metrics_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.DatasetVersionMetricsGroup]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        dataset_version_metrics_groups: collections.abc.Iterable[proto.clarifai.api.resources_pb2.DatasetVersionMetricsGroup] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_version_metrics_groups", b"dataset_version_metrics_groups", "status", b"status"]) -> None: ...

global___MultiDatasetVersionMetricsGroupResponse = MultiDatasetVersionMetricsGroupResponse

@typing_extensions.final
class SingleDatasetVersionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATASET_VERSION_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def dataset_version(self) -> proto.clarifai.api.resources_pb2.DatasetVersion: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        dataset_version: proto.clarifai.api.resources_pb2.DatasetVersion | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_version", b"dataset_version", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_version", b"dataset_version", "status", b"status"]) -> None: ...

global___SingleDatasetVersionResponse = SingleDatasetVersionResponse

@typing_extensions.final
class GetDatasetInputsSearchAddJobRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    JOB_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    job_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        job_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["job_id", b"job_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetDatasetInputsSearchAddJobRequest = GetDatasetInputsSearchAddJobRequest

@typing_extensions.final
class SingleDatasetInputsSearchAddJobResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    JOB_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def job(self) -> proto.clarifai.api.resources_pb2.DatasetInputsSearchAddJob: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        job: proto.clarifai.api.resources_pb2.DatasetInputsSearchAddJob | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["job", b"job", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["job", b"job", "status", b"status"]) -> None: ...

global___SingleDatasetInputsSearchAddJobResponse = SingleDatasetInputsSearchAddJobResponse

@typing_extensions.final
class PostModelOutputsRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////
    Model prediction related stuff needs inputs and produces outputs.
    //////////////////////////////////////////////////
    Model prediction.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    version_id: builtins.str
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Input]: ...
    @property
    def model(self) -> proto.clarifai.api.resources_pb2.Model:
        """This allows you to specify config options for the model such as
        the language which appear's in the model's output_info.
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        version_id: builtins.str = ...,
        inputs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Input] | None = ...,
        model: proto.clarifai.api.resources_pb2.Model | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model", b"model", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs", b"inputs", "model", b"model", "model_id", b"model_id", "user_app_id", b"user_app_id", "version_id", b"version_id"]) -> None: ...

global___PostModelOutputsRequest = PostModelOutputsRequest

@typing_extensions.final
class ListModelInputsRequest(google.protobuf.message.Message):
    """Listing the inputs that went into training this model."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    version_id: builtins.str
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        version_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_id", b"model_id", "page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id", "version_id", b"version_id"]) -> None: ...

global___ListModelInputsRequest = ListModelInputsRequest

@typing_extensions.final
class GetKeyRequest(google.protobuf.message.Message):
    """GetKeyRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    KEY_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    key_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        key_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_id", b"key_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetKeyRequest = GetKeyRequest

@typing_extensions.final
class ListKeysRequest(google.protobuf.message.Message):
    """ListKeysRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    NOT_EXPIRED_FIELD_NUMBER: builtins.int
    SCOPES_FIELD_NUMBER: builtins.int
    ENDPOINTS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    not_expired: builtins.bool
    @property
    def scopes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def endpoints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        not_expired: builtins.bool = ...,
        scopes: collections.abc.Iterable[builtins.str] | None = ...,
        endpoints: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["endpoints", b"endpoints", "not_expired", b"not_expired", "page", b"page", "per_page", b"per_page", "scopes", b"scopes", "user_app_id", b"user_app_id"]) -> None: ...

global___ListKeysRequest = ListKeysRequest

@typing_extensions.final
class ListAppKeysRequest(google.protobuf.message.Message):
    """ListAppKeysRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListAppKeysRequest = ListAppKeysRequest

@typing_extensions.final
class PostKeysRequest(google.protobuf.message.Message):
    """PostKeysRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    KEYS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Key]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        keys: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Key] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys", b"keys", "user_app_id", b"user_app_id"]) -> None: ...

global___PostKeysRequest = PostKeysRequest

@typing_extensions.final
class DeleteKeyRequest(google.protobuf.message.Message):
    """DeleteKeyRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    KEY_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    key_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        key_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_id", b"key_id", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteKeyRequest = DeleteKeyRequest

@typing_extensions.final
class PatchKeysRequest(google.protobuf.message.Message):
    """PatchKeysRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    KEYS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Key]: ...
    action: builtins.str
    """The action to perform on the patched objects
    For now only action 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        keys: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Key] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "keys", b"keys", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchKeysRequest = PatchKeysRequest

@typing_extensions.final
class SingleKeyResponse(google.protobuf.message.Message):
    """SingleKeyResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def key(self) -> proto.clarifai.api.resources_pb2.Key: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        key: proto.clarifai.api.resources_pb2.Key | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key", b"key", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "status", b"status"]) -> None: ...

global___SingleKeyResponse = SingleKeyResponse

@typing_extensions.final
class MultiKeyResponse(google.protobuf.message.Message):
    """MultiKeyResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    KEYS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Key]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        keys: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Key] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys", b"keys", "status", b"status"]) -> None: ...

global___MultiKeyResponse = MultiKeyResponse

@typing_extensions.final
class GetModelRequest(google.protobuf.message.Message):
    """GetModelRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    LANGUAGE_FIELD_NUMBER: builtins.int
    TRAINED_BEFORE_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    version_id: builtins.str
    """This is included so that we can re-use this request for multiple
    rpcs with and without the version_id.
    """
    language: builtins.str
    trained_before: builtins.bool
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        version_id: builtins.str = ...,
        language: builtins.str = ...,
        trained_before: builtins.bool = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "language", b"language", "model_id", b"model_id", "trained_before", b"trained_before", "user_app_id", b"user_app_id", "version_id", b"version_id"]) -> None: ...

global___GetModelRequest = GetModelRequest

@typing_extensions.final
class ListModelsRequest(google.protobuf.message.Message):
    """ListModelsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    SORT_ASCENDING_FIELD_NUMBER: builtins.int
    SORT_BY_NAME_FIELD_NUMBER: builtins.int
    SORT_BY_NUM_INPUTS_FIELD_NUMBER: builtins.int
    SORT_BY_MODIFIED_AT_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    FILTER_BY_USER_ID_FIELD_NUMBER: builtins.int
    MODEL_TYPE_ID_FIELD_NUMBER: builtins.int
    TRAINED_ONLY_FIELD_NUMBER: builtins.int
    INPUT_FIELDS_FIELD_NUMBER: builtins.int
    OUTPUT_FIELDS_FIELD_NUMBER: builtins.int
    LICENSE_FIELD_NUMBER: builtins.int
    FEATURED_ONLY_FIELD_NUMBER: builtins.int
    STARRED_ONLY_FIELD_NUMBER: builtins.int
    TOOLKITS_FIELD_NUMBER: builtins.int
    USE_CASES_FIELD_NUMBER: builtins.int
    LANGUAGES_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    DONT_FETCH_FROM_MAIN_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    sort_ascending: builtins.bool
    """Sorting options:
    Whether to sort in ascending order. If false, will order in descending order.
    """
    sort_by_name: builtins.bool
    """Whether to order by the name"""
    sort_by_num_inputs: builtins.bool
    """Whether to order by the number of training inputs"""
    sort_by_modified_at: builtins.bool
    """Whether to order by the modified_at time of the latest model version.
    If neither sort option is set to true, will sort by modified_at.
    """
    query: builtins.str
    """Filtering options:
    Query name, description and id fields, that can contain the words in the query string. Does NOT support wildcards - full words only. Supports operators "OR" and "-" as NOT.
    """
    name: builtins.str
    """Filter by the description and id of the model. This supports wildcard queries like "gen*" to match "general" as an example."""
    filter_by_user_id: builtins.bool
    """Extends the name filter to include the user_id of the application owner that the model belongs to."""
    model_type_id: builtins.str
    """Filter models by the specific model_type_id. See ListModelTypes for the list of ModelType.Id's
    supported.
    """
    trained_only: builtins.bool
    """If true, we only return models that have the status MODEL_TRAINED, which includes non-trainable model types."""
    @property
    def input_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The list of input fields to the model.
        For example, you can specify 'image', which will return models that make inferences on images like visual-classifier models.
        """
    @property
    def output_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The list of output fields to the model.
        For example, you can specify 'regions[...].data.concepts', which will return visual-detector models.
        """
    license: builtins.str
    """Filter by the license of the model version"""
    featured_only: builtins.bool
    """If true, we only return models that are handpicked by clarifai staff"""
    starred_only: builtins.bool
    """If true, we only return models that are starred by the requesting user"""
    @property
    def toolkits(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of toolkit tags to filter by"""
    @property
    def use_cases(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of use_case tags to filter by"""
    @property
    def languages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of language tags to filter by"""
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars, outputs, presets"""
    dont_fetch_from_main: builtins.bool
    """Old API behavior resulted in returning clarifai main models when calling ListModels while scoped to an app. While we transition
    away from that, we can use this flag to not always fetch clarifai main models, unless that is the app we are explicitly listing for.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        sort_ascending: builtins.bool = ...,
        sort_by_name: builtins.bool = ...,
        sort_by_num_inputs: builtins.bool = ...,
        sort_by_modified_at: builtins.bool = ...,
        query: builtins.str = ...,
        name: builtins.str = ...,
        filter_by_user_id: builtins.bool = ...,
        model_type_id: builtins.str = ...,
        trained_only: builtins.bool = ...,
        input_fields: collections.abc.Iterable[builtins.str] | None = ...,
        output_fields: collections.abc.Iterable[builtins.str] | None = ...,
        license: builtins.str = ...,
        featured_only: builtins.bool = ...,
        starred_only: builtins.bool = ...,
        toolkits: collections.abc.Iterable[builtins.str] | None = ...,
        use_cases: collections.abc.Iterable[builtins.str] | None = ...,
        languages: collections.abc.Iterable[builtins.str] | None = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
        dont_fetch_from_main: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sort_by", b"sort_by", "sort_by_modified_at", b"sort_by_modified_at", "sort_by_name", b"sort_by_name", "sort_by_num_inputs", b"sort_by_num_inputs", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "dont_fetch_from_main", b"dont_fetch_from_main", "featured_only", b"featured_only", "filter_by_user_id", b"filter_by_user_id", "input_fields", b"input_fields", "languages", b"languages", "license", b"license", "model_type_id", b"model_type_id", "name", b"name", "output_fields", b"output_fields", "page", b"page", "per_page", b"per_page", "query", b"query", "sort_ascending", b"sort_ascending", "sort_by", b"sort_by", "sort_by_modified_at", b"sort_by_modified_at", "sort_by_name", b"sort_by_name", "sort_by_num_inputs", b"sort_by_num_inputs", "starred_only", b"starred_only", "toolkits", b"toolkits", "trained_only", b"trained_only", "use_cases", b"use_cases", "user_app_id", b"user_app_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["sort_by", b"sort_by"]) -> typing_extensions.Literal["sort_by_name", "sort_by_num_inputs", "sort_by_modified_at"] | None: ...

global___ListModelsRequest = ListModelsRequest

@typing_extensions.final
class PatchModelToolkitsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    TOOLKITS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    @property
    def toolkits(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    action: builtins.str
    """overwrite supported"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        toolkits: collections.abc.Iterable[builtins.str] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "model_id", b"model_id", "toolkits", b"toolkits", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchModelToolkitsRequest = PatchModelToolkitsRequest

@typing_extensions.final
class PatchModelCheckConsentsRequest(google.protobuf.message.Message):
    """PatchModelCheckConsentsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    CHECK_CONSENTS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    """the model id"""
    @property
    def check_consents(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """the consents"""
    action: builtins.str
    """overwrite supported"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        check_consents: collections.abc.Iterable[builtins.str] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "check_consents", b"check_consents", "model_id", b"model_id", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchModelCheckConsentsRequest = PatchModelCheckConsentsRequest

@typing_extensions.final
class PatchModelUseCasesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    USECASES_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    @property
    def usecases(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    action: builtins.str
    """overwrite supported"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        usecases: collections.abc.Iterable[builtins.str] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "model_id", b"model_id", "usecases", b"usecases", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchModelUseCasesRequest = PatchModelUseCasesRequest

@typing_extensions.final
class PatchModelLanguagesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    LANGUAGES_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    @property
    def languages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    action: builtins.str
    """Only overwrite supported"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        languages: collections.abc.Iterable[builtins.str] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "languages", b"languages", "model_id", b"model_id", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchModelLanguagesRequest = PatchModelLanguagesRequest

@typing_extensions.final
class MultiModelToolkitResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    TOOLKITS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def toolkits(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        toolkits: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "toolkits", b"toolkits"]) -> None: ...

global___MultiModelToolkitResponse = MultiModelToolkitResponse

@typing_extensions.final
class MultiModelCheckConsentResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    CHECK_CONSENTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def check_consents(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        check_consents: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["check_consents", b"check_consents", "status", b"status"]) -> None: ...

global___MultiModelCheckConsentResponse = MultiModelCheckConsentResponse

@typing_extensions.final
class MultiModelUseCaseResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    USECASES_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def usecases(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        usecases: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "usecases", b"usecases"]) -> None: ...

global___MultiModelUseCaseResponse = MultiModelUseCaseResponse

@typing_extensions.final
class MultiModelLanguageResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    LANGUAGES_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def languages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        languages: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["languages", b"languages", "status", b"status"]) -> None: ...

global___MultiModelLanguageResponse = MultiModelLanguageResponse

@typing_extensions.final
class PostModelsRequest(google.protobuf.message.Message):
    """PostModelsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    MODELS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def model(self) -> proto.clarifai.api.resources_pb2.Model:
        """NOTE: inconsistent since "model" is not plural, please use "models" below.
        Previously you could only create one model at a time.
        We still support this but you should pass it as models=[model] so
        that this endpoint is consistent with the rest of our API.
        """
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Model]:
        """This allows you to create one or more model by posting it to the API."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model: proto.clarifai.api.resources_pb2.Model | None = ...,
        models: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Model] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model", b"model", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model", b"model", "models", b"models", "user_app_id", b"user_app_id"]) -> None: ...

global___PostModelsRequest = PostModelsRequest

@typing_extensions.final
class PatchModelsRequest(google.protobuf.message.Message):
    """PatchModelsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODELS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Model]: ...
    action: builtins.str
    """The action to perform on the patched objects
    For now actions 'merge', 'overwrite', and 'remove' are supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        models: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Model] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "models", b"models", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchModelsRequest = PatchModelsRequest

@typing_extensions.final
class IdUpdateSource(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NEW_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """old id"""
    new_id: builtins.str
    """new id"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        new_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "new_id", b"new_id"]) -> None: ...

global___IdUpdateSource = IdUpdateSource

@typing_extensions.final
class PatchModelIdsRequest(google.protobuf.message.Message):
    """PatchModelIdsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IdUpdateSource]:
        """Array containing 1 entry"""
    action: builtins.str
    """The action to perform on the patched objects
    Only 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[global___IdUpdateSource] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchModelIdsRequest = PatchModelIdsRequest

@typing_extensions.final
class DeleteModelRequest(google.protobuf.message.Message):
    """DeleteModelRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_id", b"model_id", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteModelRequest = DeleteModelRequest

@typing_extensions.final
class DeleteModelsRequest(google.protobuf.message.Message):
    """Request to delete several things by the list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    DELETE_ALL_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    delete_all: builtins.bool
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
        delete_all: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["delete_all", b"delete_all", "ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteModelsRequest = DeleteModelsRequest

@typing_extensions.final
class PostModelsSearchesRequest(google.protobuf.message.Message):
    """Search over the available models."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_QUERY_FIELD_NUMBER: builtins.int
    PAGINATION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """Ids present in the url of the request."""
    @property
    def model_query(self) -> proto.clarifai.api.resources_pb2.ModelQuery:
        """The body of the request."""
    @property
    def pagination(self) -> global___Pagination:
        """Pagination parameters here since there are no url args in this
        POST request.
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_query: proto.clarifai.api.resources_pb2.ModelQuery | None = ...,
        pagination: global___Pagination | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model_query", b"model_query", "pagination", b"pagination", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_query", b"model_query", "pagination", b"pagination", "user_app_id", b"user_app_id"]) -> None: ...

global___PostModelsSearchesRequest = PostModelsSearchesRequest

@typing_extensions.final
class SingleModelResponse(google.protobuf.message.Message):
    """SingleModelResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def model(self) -> proto.clarifai.api.resources_pb2.Model: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        model: proto.clarifai.api.resources_pb2.Model | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model", b"model", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model", b"model", "status", b"status"]) -> None: ...

global___SingleModelResponse = SingleModelResponse

@typing_extensions.final
class MultiModelResponse(google.protobuf.message.Message):
    """MultiModelResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODELS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Model]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        models: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Model] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["models", b"models", "status", b"status"]) -> None: ...

global___MultiModelResponse = MultiModelResponse

@typing_extensions.final
class PatchModelVersionsRequest(google.protobuf.message.Message):
    """PatchModelVersionsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    MODEL_VERSIONS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    @property
    def model_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ModelVersion]: ...
    action: builtins.str
    """The action to perform on the patched objects
    For now actions 'merge', 'overwrite', and 'remove' are supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        model_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ModelVersion] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "model_id", b"model_id", "model_versions", b"model_versions", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchModelVersionsRequest = PatchModelVersionsRequest

@typing_extensions.final
class GetModelVersionRequest(google.protobuf.message.Message):
    """request for different endpoints currently."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    version_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        version_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_id", b"model_id", "user_app_id", b"user_app_id", "version_id", b"version_id"]) -> None: ...

global___GetModelVersionRequest = GetModelVersionRequest

@typing_extensions.final
class ListModelVersionsRequest(google.protobuf.message.Message):
    """ListModelVersionsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    CONCEPT_IDS_FIELD_NUMBER: builtins.int
    TRAINED_ONLY_FIELD_NUMBER: builtins.int
    SORT_ASCENDING_FIELD_NUMBER: builtins.int
    SORT_BY_STATUS_CODE_FIELD_NUMBER: builtins.int
    SORT_BY_NUM_INPUTS_FIELD_NUMBER: builtins.int
    SORT_BY_DESCRIPTION_FIELD_NUMBER: builtins.int
    SORT_BY_CREATED_AT_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    @property
    def concept_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Filtering options:
        To list only the model versions that have these concept ids present in them.
        """
    trained_only: builtins.bool
    """To list only the model versions that have been trained."""
    sort_ascending: builtins.bool
    """Sorting options:
    Whether to sort in ascending order. If false, will order in descending order.
    """
    sort_by_status_code: builtins.bool
    """Whether to order by the status code"""
    sort_by_num_inputs: builtins.bool
    """Whether to order by the number of training inputs"""
    sort_by_description: builtins.bool
    """Whether to sort by the description"""
    sort_by_created_at: builtins.bool
    """Whether to order by the created_at time
    If neither sort option is set to true, will sort by created_at.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        concept_ids: collections.abc.Iterable[builtins.str] | None = ...,
        trained_only: builtins.bool = ...,
        sort_ascending: builtins.bool = ...,
        sort_by_status_code: builtins.bool = ...,
        sort_by_num_inputs: builtins.bool = ...,
        sort_by_description: builtins.bool = ...,
        sort_by_created_at: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sort_by", b"sort_by", "sort_by_created_at", b"sort_by_created_at", "sort_by_description", b"sort_by_description", "sort_by_num_inputs", b"sort_by_num_inputs", "sort_by_status_code", b"sort_by_status_code", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["concept_ids", b"concept_ids", "model_id", b"model_id", "page", b"page", "per_page", b"per_page", "sort_ascending", b"sort_ascending", "sort_by", b"sort_by", "sort_by_created_at", b"sort_by_created_at", "sort_by_description", b"sort_by_description", "sort_by_num_inputs", b"sort_by_num_inputs", "sort_by_status_code", b"sort_by_status_code", "trained_only", b"trained_only", "user_app_id", b"user_app_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["sort_by", b"sort_by"]) -> typing_extensions.Literal["sort_by_status_code", "sort_by_num_inputs", "sort_by_description", "sort_by_created_at"] | None: ...

global___ListModelVersionsRequest = ListModelVersionsRequest

@typing_extensions.final
class DeleteModelVersionRequest(google.protobuf.message.Message):
    """DeleteModelVersionRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    version_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        version_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_id", b"model_id", "user_app_id", b"user_app_id", "version_id", b"version_id"]) -> None: ...

global___DeleteModelVersionRequest = DeleteModelVersionRequest

@typing_extensions.final
class SingleModelVersionResponse(google.protobuf.message.Message):
    """SingleModelVersionResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODEL_VERSION_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def model_version(self) -> proto.clarifai.api.resources_pb2.ModelVersion: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        model_version: proto.clarifai.api.resources_pb2.ModelVersion | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model_version", b"model_version", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_version", b"model_version", "status", b"status"]) -> None: ...

global___SingleModelVersionResponse = SingleModelVersionResponse

@typing_extensions.final
class MultiModelVersionResponse(google.protobuf.message.Message):
    """MultiModelVersionResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODEL_VERSIONS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def model_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ModelVersion]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        model_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ModelVersion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_versions", b"model_versions", "status", b"status"]) -> None: ...

global___MultiModelVersionResponse = MultiModelVersionResponse

@typing_extensions.final
class PostModelVersionsRequest(google.protobuf.message.Message):
    """Create (train) a new model version."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    MODEL_VERSIONS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    EVAL_INFO_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    @property
    def model_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ModelVersion]: ...
    description: builtins.str
    """Description about this training run"""
    @property
    def eval_info(self) -> proto.clarifai.api.resources_pb2.EvalInfo:
        """When evaluate_after_training set to true, we will do evaluation immediately after training finishes.
        We will merge this with default_eval_info.
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        model_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ModelVersion] | None = ...,
        description: builtins.str = ...,
        eval_info: proto.clarifai.api.resources_pb2.EvalInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["eval_info", b"eval_info", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "eval_info", b"eval_info", "model_id", b"model_id", "model_versions", b"model_versions", "user_app_id", b"user_app_id"]) -> None: ...

global___PostModelVersionsRequest = PostModelVersionsRequest

@typing_extensions.final
class PostWorkflowVersionsUnPublishRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    PUBLICATIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    workflow_id: builtins.str
    @property
    def publications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WorkflowVersionUnPublishRequest]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflow_id: builtins.str = ...,
        publications: collections.abc.Iterable[global___WorkflowVersionUnPublishRequest] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["publications", b"publications", "user_app_id", b"user_app_id", "workflow_id", b"workflow_id"]) -> None: ...

global___PostWorkflowVersionsUnPublishRequest = PostWorkflowVersionsUnPublishRequest

@typing_extensions.final
class PostWorkflowVersionsPublishRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    PUBLICATIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    workflow_id: builtins.str
    @property
    def publications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WorkflowVersionPublishRequest]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflow_id: builtins.str = ...,
        publications: collections.abc.Iterable[global___WorkflowVersionPublishRequest] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["publications", b"publications", "user_app_id", b"user_app_id", "workflow_id", b"workflow_id"]) -> None: ...

global___PostWorkflowVersionsPublishRequest = PostWorkflowVersionsPublishRequest

@typing_extensions.final
class WorkflowVersionPublishRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_ID_FIELD_NUMBER: builtins.int
    version_id: builtins.str
    def __init__(
        self,
        *,
        version_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["version_id", b"version_id"]) -> None: ...

global___WorkflowVersionPublishRequest = WorkflowVersionPublishRequest

@typing_extensions.final
class WorkflowVersionUnPublishRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_ID_FIELD_NUMBER: builtins.int
    version_id: builtins.str
    def __init__(
        self,
        *,
        version_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["version_id", b"version_id"]) -> None: ...

global___WorkflowVersionUnPublishRequest = WorkflowVersionUnPublishRequest

@typing_extensions.final
class ModelVersionPublishRequest(google.protobuf.message.Message):
    """ModelVersionPublishRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_ID_FIELD_NUMBER: builtins.int
    version_id: builtins.str
    def __init__(
        self,
        *,
        version_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["version_id", b"version_id"]) -> None: ...

global___ModelVersionPublishRequest = ModelVersionPublishRequest

@typing_extensions.final
class PostModelVersionsPublishRequest(google.protobuf.message.Message):
    """PostModelVersionsPublishRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    PUBLICATIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    @property
    def publications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ModelVersionPublishRequest]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        publications: collections.abc.Iterable[global___ModelVersionPublishRequest] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_id", b"model_id", "publications", b"publications", "user_app_id", b"user_app_id"]) -> None: ...

global___PostModelVersionsPublishRequest = PostModelVersionsPublishRequest

@typing_extensions.final
class ModelVersionUnpublishRequest(google.protobuf.message.Message):
    """ModelVersionUnpublishRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_ID_FIELD_NUMBER: builtins.int
    version_id: builtins.str
    def __init__(
        self,
        *,
        version_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["version_id", b"version_id"]) -> None: ...

global___ModelVersionUnpublishRequest = ModelVersionUnpublishRequest

@typing_extensions.final
class PostModelVersionsUnPublishRequest(google.protobuf.message.Message):
    """PostModelVersionsUnPublishRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    PUBLICATIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    @property
    def publications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ModelVersionUnpublishRequest]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        publications: collections.abc.Iterable[global___ModelVersionUnpublishRequest] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_id", b"model_id", "publications", b"publications", "user_app_id", b"user_app_id"]) -> None: ...

global___PostModelVersionsUnPublishRequest = PostModelVersionsUnPublishRequest

@typing_extensions.final
class PostModelVersionEvaluationsRequest(google.protobuf.message.Message):
    """Evaluate this model vesion"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    MODEL_VERSION_ID_FIELD_NUMBER: builtins.int
    EVAL_METRICS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    model_version_id: builtins.str
    @property
    def eval_metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.EvalMetrics]:
        """EvalInfo and ID will be used when creating the evaluation"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        model_version_id: builtins.str = ...,
        eval_metrics: collections.abc.Iterable[proto.clarifai.api.resources_pb2.EvalMetrics] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["eval_metrics", b"eval_metrics", "model_id", b"model_id", "model_version_id", b"model_version_id", "user_app_id", b"user_app_id"]) -> None: ...

global___PostModelVersionEvaluationsRequest = PostModelVersionEvaluationsRequest

@typing_extensions.final
class ListModelVersionEvaluationsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    MODEL_VERSION_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    model_version_id: builtins.str
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        model_version_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_id", b"model_id", "model_version_id", b"model_version_id", "page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListModelVersionEvaluationsRequest = ListModelVersionEvaluationsRequest

@typing_extensions.final
class GetModelVersionEvaluationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    MODEL_VERSION_ID_FIELD_NUMBER: builtins.int
    EVALUATION_ID_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    model_version_id: builtins.str
    evaluation_id: builtins.str
    @property
    def fields(self) -> proto.clarifai.api.resources_pb2.FieldsValue:
        """Any of the fields you wish to return from multiclass_metrics
        By default, only the summary is returned.
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        model_version_id: builtins.str = ...,
        evaluation_id: builtins.str = ...,
        fields: proto.clarifai.api.resources_pb2.FieldsValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fields", b"fields", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["evaluation_id", b"evaluation_id", "fields", b"fields", "model_id", b"model_id", "model_version_id", b"model_version_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetModelVersionEvaluationRequest = GetModelVersionEvaluationRequest

@typing_extensions.final
class SingleEvalMetricsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    EVAL_METRICS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def eval_metrics(self) -> proto.clarifai.api.resources_pb2.EvalMetrics: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        eval_metrics: proto.clarifai.api.resources_pb2.EvalMetrics | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["eval_metrics", b"eval_metrics", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["eval_metrics", b"eval_metrics", "status", b"status"]) -> None: ...

global___SingleEvalMetricsResponse = SingleEvalMetricsResponse

@typing_extensions.final
class MultiEvalMetricsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    EVAL_METRICS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def eval_metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.EvalMetrics]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        eval_metrics: collections.abc.Iterable[proto.clarifai.api.resources_pb2.EvalMetrics] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["eval_metrics", b"eval_metrics", "status", b"status"]) -> None: ...

global___MultiEvalMetricsResponse = MultiEvalMetricsResponse

@typing_extensions.final
class PostModelVersionMetricsRequest(google.protobuf.message.Message):
    """Evaluate this model version."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    TEST_SEARCH_FIELD_NUMBER: builtins.int
    EVAL_INFO_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    version_id: builtins.str
    @property
    def test_search(self) -> proto.clarifai.api.resources_pb2.Search:
        """Use this to filter inputs that are used in evaluation"""
    @property
    def eval_info(self) -> proto.clarifai.api.resources_pb2.EvalInfo:
        """evaluation info. Such as dataset used for evaluation."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        version_id: builtins.str = ...,
        test_search: proto.clarifai.api.resources_pb2.Search | None = ...,
        eval_info: proto.clarifai.api.resources_pb2.EvalInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["eval_info", b"eval_info", "test_search", b"test_search", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["eval_info", b"eval_info", "model_id", b"model_id", "test_search", b"test_search", "user_app_id", b"user_app_id", "version_id", b"version_id"]) -> None: ...

global___PostModelVersionMetricsRequest = PostModelVersionMetricsRequest

@typing_extensions.final
class GetModelVersionMetricsRequest(google.protobuf.message.Message):
    """Get the already computed evaluation metrics for this model
    version.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    version_id: builtins.str
    @property
    def fields(self) -> proto.clarifai.api.resources_pb2.FieldsValue:
        """Any of the fields you wish to return from multiclass_metrics
        By default, only the summary will be returned
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        version_id: builtins.str = ...,
        fields: proto.clarifai.api.resources_pb2.FieldsValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fields", b"fields", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fields", b"fields", "model_id", b"model_id", "user_app_id", b"user_app_id", "version_id", b"version_id"]) -> None: ...

global___GetModelVersionMetricsRequest = GetModelVersionMetricsRequest

@typing_extensions.final
class GetModelTypeRequest(google.protobuf.message.Message):
    """// Request to delete several things by the list of ids.
    message DeleteModelVersionsRequest {
      clarifai.api.UserAppIDSet user_app_id = 1;
      repeated string ids = 2;
      bool delete_all = 3;
    }

    GetModelTypeRequest
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_TYPE_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """use and app combo. Not really used for this endpoint at this time so may go away in future."""
    model_type_id: builtins.str
    """The specific ModelType.Id you want to retrieve."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_type_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_type_id", b"model_type_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetModelTypeRequest = GetModelTypeRequest

@typing_extensions.final
class ListModelTypesRequest(google.protobuf.message.Message):
    """ListModelTypesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """use and app combo. Not really used for this endpoint at this time so may go away in future."""
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListModelTypesRequest = ListModelTypesRequest

@typing_extensions.final
class ListOpenSourceLicensesRequest(google.protobuf.message.Message):
    """ListOpenSourceLicensesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListOpenSourceLicensesRequest = ListOpenSourceLicensesRequest

@typing_extensions.final
class ListOpenSourceLicensesResponse(google.protobuf.message.Message):
    """ListOpenSourceLicensesResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    LICENSES_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def licenses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        licenses: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["licenses", b"licenses", "status", b"status"]) -> None: ...

global___ListOpenSourceLicensesResponse = ListOpenSourceLicensesResponse

@typing_extensions.final
class SingleModelTypeResponse(google.protobuf.message.Message):
    """SingleModelTypeResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODEL_TYPE_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """Status of the response."""
    @property
    def model_type(self) -> proto.clarifai.api.resources_pb2.ModelType:
        """The retrieved ModelType object. ."""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        model_type: proto.clarifai.api.resources_pb2.ModelType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model_type", b"model_type", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_type", b"model_type", "status", b"status"]) -> None: ...

global___SingleModelTypeResponse = SingleModelTypeResponse

@typing_extensions.final
class MultiModelTypeResponse(google.protobuf.message.Message):
    """MultiModelTypeResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODEL_TYPES_FIELD_NUMBER: builtins.int
    MODEL_IMPORTERS_FIELD_NUMBER: builtins.int
    TRITON_CONDA_ENVS_INFO_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """Status of the response."""
    @property
    def model_types(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ModelType]:
        """List of ModelType objects."""
    @property
    def model_importers(self) -> proto.clarifai.api.resources_pb2.ModelTypeField:
        """List of model importers"""
    @property
    def triton_conda_envs_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.TritonCondaEnvInfo]:
        """Triton model envs that can be used for model upload"""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        model_types: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ModelType] | None = ...,
        model_importers: proto.clarifai.api.resources_pb2.ModelTypeField | None = ...,
        triton_conda_envs_info: collections.abc.Iterable[proto.clarifai.api.resources_pb2.TritonCondaEnvInfo] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model_importers", b"model_importers", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_importers", b"model_importers", "model_types", b"model_types", "status", b"status", "triton_conda_envs_info", b"triton_conda_envs_info"]) -> None: ...

global___MultiModelTypeResponse = MultiModelTypeResponse

@typing_extensions.final
class GetModelVersionInputExampleRequest(google.protobuf.message.Message):
    """GetModelVersionInputExampleRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    MODEL_VERSION_ID_FIELD_NUMBER: builtins.int
    EXAMPLE_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """authorization field  (contains app/user id info)"""
    model_id: builtins.str
    """id of model the example belongs to"""
    model_version_id: builtins.str
    """specific version the example belongs to"""
    example_id: builtins.str
    """Id of example to fetch"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        model_version_id: builtins.str = ...,
        example_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["example_id", b"example_id", "model_id", b"model_id", "model_version_id", b"model_version_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetModelVersionInputExampleRequest = GetModelVersionInputExampleRequest

@typing_extensions.final
class ListModelVersionInputExamplesRequest(google.protobuf.message.Message):
    """ListModelVersionInputExamplesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    MODEL_VERSION_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """authorization field  (contains app/user id info)"""
    model_id: builtins.str
    """id of model the example belongs to"""
    model_version_id: builtins.str
    """specific version the example belongs to"""
    page: builtins.int
    """Optional, defaults to 1."""
    per_page: builtins.int
    """Optional, defaults to 128 references per page."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        model_version_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_id", b"model_id", "model_version_id", b"model_version_id", "page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListModelVersionInputExamplesRequest = ListModelVersionInputExamplesRequest

@typing_extensions.final
class SingleModelVersionInputExampleResponse(google.protobuf.message.Message):
    """SingleModelVersionInputExampleResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODEL_VERSION_INPUT_EXAMPLE_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """status of response"""
    @property
    def model_version_input_example(self) -> proto.clarifai.api.resources_pb2.ModelVersionInputExample:
        """model input example message"""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        model_version_input_example: proto.clarifai.api.resources_pb2.ModelVersionInputExample | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model_version_input_example", b"model_version_input_example", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_version_input_example", b"model_version_input_example", "status", b"status"]) -> None: ...

global___SingleModelVersionInputExampleResponse = SingleModelVersionInputExampleResponse

@typing_extensions.final
class MultiModelVersionInputExampleResponse(google.protobuf.message.Message):
    """MultiModelVersionInputExampleResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODEL_VERSION_INPUT_EXAMPLES_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """status of response"""
    @property
    def model_version_input_examples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ModelVersionInputExample]:
        """model input example messages"""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        model_version_input_examples: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ModelVersionInputExample] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_version_input_examples", b"model_version_input_examples", "status", b"status"]) -> None: ...

global___MultiModelVersionInputExampleResponse = MultiModelVersionInputExampleResponse

@typing_extensions.final
class ListModelReferencesRequest(google.protobuf.message.Message):
    """ListModelReferencesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODEL_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    model_id: builtins.str
    page: builtins.int
    """Optional, defaults to 1."""
    per_page: builtins.int
    """Optional, defaults to 128 references per page."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        model_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_id", b"model_id", "page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListModelReferencesRequest = ListModelReferencesRequest

@typing_extensions.final
class MultiModelReferenceResponse(google.protobuf.message.Message):
    """MultiModelReferenceResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODEL_REFERENCES_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def model_references(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ModelReference]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        model_references: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ModelReference] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_references", b"model_references", "status", b"status"]) -> None: ...

global___MultiModelReferenceResponse = MultiModelReferenceResponse

@typing_extensions.final
class MultiOutputResponse(google.protobuf.message.Message):
    """MultiOutputResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    OUTPUTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def outputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Output]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        outputs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Output] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["outputs", b"outputs", "status", b"status"]) -> None: ...

global___MultiOutputResponse = MultiOutputResponse

@typing_extensions.final
class ListScopesRequest(google.protobuf.message.Message):
    """ListScopesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_TYPE_FIELD_NUMBER: builtins.int
    USER_APP_ID_FIELD_NUMBER: builtins.int
    key_type: builtins.str
    """If "personal_access_token" include scopes and endpoints available to personal access tokens.
    If "api_key" include scopes and endpoints available to app-specific keys. (default)
    """
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """For all user specific information we include user_app_id to get the user_id in a consistent way"""
    def __init__(
        self,
        *,
        key_type: builtins.str = ...,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_type", b"key_type", "user_app_id", b"user_app_id"]) -> None: ...

global___ListScopesRequest = ListScopesRequest

@typing_extensions.final
class MyScopesRequest(google.protobuf.message.Message):
    """MyScopesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> None: ...

global___MyScopesRequest = MyScopesRequest

@typing_extensions.final
class MyScopesUserRequest(google.protobuf.message.Message):
    """MyScopesUserRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> None: ...

global___MyScopesUserRequest = MyScopesUserRequest

@typing_extensions.final
class MyScopesRootRequest(google.protobuf.message.Message):
    """MyScopesRootRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MyScopesRootRequest = MyScopesRootRequest

@typing_extensions.final
class MultiScopeDepsResponse(google.protobuf.message.Message):
    """MultiScopeDepsResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    SCOPE_DEPS_FIELD_NUMBER: builtins.int
    ENDPOINT_DEPS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The status of the request."""
    @property
    def scope_deps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ScopeDeps]:
        """scopes is a list of low-level scopes and their dependencies."""
    @property
    def endpoint_deps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.EndpointDeps]:
        """endpoint_scopes is a listof all the publicly available endponts which can be
        used as scopes as well. A call to each of those endpoint depends on a subset
        of the above "scopes"
        """
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        scope_deps: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ScopeDeps] | None = ...,
        endpoint_deps: collections.abc.Iterable[proto.clarifai.api.resources_pb2.EndpointDeps] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["endpoint_deps", b"endpoint_deps", "scope_deps", b"scope_deps", "status", b"status"]) -> None: ...

global___MultiScopeDepsResponse = MultiScopeDepsResponse

@typing_extensions.final
class MultiScopeResponse(google.protobuf.message.Message):
    """MultiScopeResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    SCOPES_FIELD_NUMBER: builtins.int
    APP_FIELD_NUMBER: builtins.int
    ENDPOINTS_FIELD_NUMBER: builtins.int
    USER_FEATURE_FLAGS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The status of the request."""
    @property
    def scopes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """This is a list of the scopes that your key has."""
    @property
    def app(self) -> proto.clarifai.api.resources_pb2.App:
        """The app that the key has access to."""
    @property
    def endpoints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """This is a list of endpoint permissions that your key has."""
    user_feature_flags: builtins.str
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        scopes: collections.abc.Iterable[builtins.str] | None = ...,
        app: proto.clarifai.api.resources_pb2.App | None = ...,
        endpoints: collections.abc.Iterable[builtins.str] | None = ...,
        user_feature_flags: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app", b"app", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app", b"app", "endpoints", b"endpoints", "scopes", b"scopes", "status", b"status", "user_feature_flags", b"user_feature_flags"]) -> None: ...

global___MultiScopeResponse = MultiScopeResponse

@typing_extensions.final
class MultiScopeUserResponse(google.protobuf.message.Message):
    """MultiScopeUserResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    SCOPES_FIELD_NUMBER: builtins.int
    ENDPOINTS_FIELD_NUMBER: builtins.int
    USER_FEATURE_FLAGS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The status of the request."""
    @property
    def scopes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """This is a list of the scopes that your key has."""
    @property
    def endpoints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """This is a list of endpoint permissions that your key has."""
    user_feature_flags: builtins.str
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        scopes: collections.abc.Iterable[builtins.str] | None = ...,
        endpoints: collections.abc.Iterable[builtins.str] | None = ...,
        user_feature_flags: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["endpoints", b"endpoints", "scopes", b"scopes", "status", b"status", "user_feature_flags", b"user_feature_flags"]) -> None: ...

global___MultiScopeUserResponse = MultiScopeUserResponse

@typing_extensions.final
class MultiScopeRootResponse(google.protobuf.message.Message):
    """MultiScopeRootResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    SCOPES_FIELD_NUMBER: builtins.int
    ENDPOINTS_FIELD_NUMBER: builtins.int
    USER_FEATURE_FLAGS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The status of the request."""
    @property
    def scopes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """This is a list of the scopes that your key has."""
    @property
    def endpoints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """This is a list of endpoint permissions that your key has."""
    user_feature_flags: builtins.str
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        scopes: collections.abc.Iterable[builtins.str] | None = ...,
        endpoints: collections.abc.Iterable[builtins.str] | None = ...,
        user_feature_flags: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["endpoints", b"endpoints", "scopes", b"scopes", "status", b"status", "user_feature_flags", b"user_feature_flags"]) -> None: ...

global___MultiScopeRootResponse = MultiScopeRootResponse

@typing_extensions.final
class GetSearchRequest(google.protobuf.message.Message):
    """GetSearchRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetSearchRequest = GetSearchRequest

@typing_extensions.final
class ListSearchesRequest(google.protobuf.message.Message):
    """ListSearchesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListSearchesRequest = ListSearchesRequest

@typing_extensions.final
class PostSearchesRequest(google.protobuf.message.Message):
    """PostSearchesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    SEARCHES_FIELD_NUMBER: builtins.int
    PAGINATION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id to query from."""
    @property
    def query(self) -> proto.clarifai.api.resources_pb2.Query:
        """The query; this specifies how the data to be searched
        this will be replaced by "Searches"
        """
    @property
    def searches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Search]:
        """The searched to be executed or saved
        Eventually the request level fields will be deprecated in favor of this object
        """
    @property
    def pagination(self) -> global___Pagination:
        """Pagination information to paginate through search result Hits."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        query: proto.clarifai.api.resources_pb2.Query | None = ...,
        searches: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Search] | None = ...,
        pagination: global___Pagination | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pagination", b"pagination", "query", b"query", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pagination", b"pagination", "query", b"query", "searches", b"searches", "user_app_id", b"user_app_id"]) -> None: ...

global___PostSearchesRequest = PostSearchesRequest

@typing_extensions.final
class PatchInputsSearchesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    SEARCHES_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id to query from."""
    @property
    def searches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Search]:
        """The searches to be patched"""
    action: builtins.str
    """The action to perform on the patched Search objects
    For now only action 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        searches: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Search] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "searches", b"searches", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchInputsSearchesRequest = PatchInputsSearchesRequest

@typing_extensions.final
class PatchAnnotationsSearchesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    SEARCHES_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id to query from."""
    @property
    def searches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Search]:
        """The searches to be patched"""
    action: builtins.str
    """The action to perform on the patched Search objects
    For now only action 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        searches: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Search] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "searches", b"searches", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchAnnotationsSearchesRequest = PatchAnnotationsSearchesRequest

@typing_extensions.final
class PatchSearchesRequest(google.protobuf.message.Message):
    """PatchSearchesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    SEARCHES_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id to query from."""
    @property
    def searches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Search]:
        """The searches to be patched"""
    action: builtins.str
    """The action to perform on the patched Search objects
    For now only action 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        searches: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Search] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "searches", b"searches", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchSearchesRequest = PatchSearchesRequest

@typing_extensions.final
class PostSearchesByIDRequest(google.protobuf.message.Message):
    """PostSearchesByIDRequest performs returns results of a saved search given its ID"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    PAGINATION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    id: builtins.str
    """ID for saves search to be executed"""
    @property
    def pagination(self) -> global___Pagination:
        """Pagination information to paginate through search result Hits."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        id: builtins.str = ...,
        pagination: global___Pagination | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pagination", b"pagination", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "pagination", b"pagination", "user_app_id", b"user_app_id"]) -> None: ...

global___PostSearchesByIDRequest = PostSearchesByIDRequest

@typing_extensions.final
class DeleteSearchRequest(google.protobuf.message.Message):
    """DeleteSearchRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteSearchRequest = DeleteSearchRequest

@typing_extensions.final
class PostAnnotationsSearchesRequest(google.protobuf.message.Message):
    """Execute a new annotation search and optionally save it
    annotation search over annotations using rank and filter proto
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    SEARCHES_FIELD_NUMBER: builtins.int
    PAGINATION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id to query from."""
    @property
    def searches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Search]:
        """The searched to be executed or saved"""
    @property
    def pagination(self) -> global___Pagination:
        """Pagination information to paginate through search result Hits."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        searches: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Search] | None = ...,
        pagination: global___Pagination | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pagination", b"pagination", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pagination", b"pagination", "searches", b"searches", "user_app_id", b"user_app_id"]) -> None: ...

global___PostAnnotationsSearchesRequest = PostAnnotationsSearchesRequest

@typing_extensions.final
class DeleteAnnotationSearchMetricsRequest(google.protobuf.message.Message):
    """DeleteAnnotationSearchMetricsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteAnnotationSearchMetricsRequest = DeleteAnnotationSearchMetricsRequest

@typing_extensions.final
class PostInputsSearchesRequest(google.protobuf.message.Message):
    """Execute a new input search and optionally save it"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    SEARCHES_FIELD_NUMBER: builtins.int
    PAGINATION_FIELD_NUMBER: builtins.int
    ONLY_COUNT_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id to query from."""
    @property
    def searches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Search]:
        """The searched to be executed or saved"""
    @property
    def pagination(self) -> global___Pagination:
        """Pagination information to paginate through search result Hits."""
    only_count: builtins.bool
    """If only_count is set, then the response will not contain hits,
    but hit_counts instead.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        searches: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Search] | None = ...,
        pagination: global___Pagination | None = ...,
        only_count: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pagination", b"pagination", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["only_count", b"only_count", "pagination", b"pagination", "searches", b"searches", "user_app_id", b"user_app_id"]) -> None: ...

global___PostInputsSearchesRequest = PostInputsSearchesRequest

@typing_extensions.final
class SingleSearchResponse(google.protobuf.message.Message):
    """SingleSearchResponse returns saved search in response to GetSearchRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    SEARCH_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """Status of whether the search was successful."""
    @property
    def search(self) -> proto.clarifai.api.resources_pb2.Search: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        search: proto.clarifai.api.resources_pb2.Search | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["search", b"search", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["search", b"search", "status", b"status"]) -> None: ...

global___SingleSearchResponse = SingleSearchResponse

@typing_extensions.final
class MultiSearchResponse(google.protobuf.message.Message):
    """MultiSearchResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    HITS_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    SEARCHES_FIELD_NUMBER: builtins.int
    HIT_COUNTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """Status of whether the search was successful."""
    id: builtins.str
    """A unique id which uniquely identifies a search"""
    @property
    def hits(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Hit]:
        """The list of search result Hits."""
    @property
    def query(self) -> proto.clarifai.api.resources_pb2.Query:
        """The original query provided in the request."""
    @property
    def searches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Search]:
        """The original Searches provided in the request."""
    @property
    def hit_counts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.HitCount]:
        """The counts of hits for each search, in the same order as searches.
        Only returned if the request set only_count.
        """
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        id: builtins.str = ...,
        hits: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Hit] | None = ...,
        query: proto.clarifai.api.resources_pb2.Query | None = ...,
        searches: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Search] | None = ...,
        hit_counts: collections.abc.Iterable[proto.clarifai.api.resources_pb2.HitCount] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["query", b"query", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hit_counts", b"hit_counts", "hits", b"hits", "id", b"id", "query", b"query", "searches", b"searches", "status", b"status"]) -> None: ...

global___MultiSearchResponse = MultiSearchResponse

@typing_extensions.final
class PostAnnotationSearchMetricsRequest(google.protobuf.message.Message):
    """PostAnnotationSearchMetricsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    GROUND_TRUTH_FIELD_NUMBER: builtins.int
    SEARCH_TO_EVAL_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    EVALUATION_TYPE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    id: builtins.str
    """A unique customer facing id to identify this eval request"""
    @property
    def ground_truth(self) -> proto.clarifai.api.resources_pb2.Search:
        """The ground truth we are evaluating against"""
    @property
    def search_to_eval(self) -> proto.clarifai.api.resources_pb2.Search:
        """The set we are evaluating"""
    @property
    def data(self) -> proto.clarifai.api.resources_pb2.Data:
        """List of concepts to evaluate are expected to be in data.concepts
        If nil, then all app concepts are used
        """
    evaluation_type: proto.clarifai.api.resources_pb2.EvaluationType.ValueType
    """The type of evaluation to use"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        id: builtins.str = ...,
        ground_truth: proto.clarifai.api.resources_pb2.Search | None = ...,
        search_to_eval: proto.clarifai.api.resources_pb2.Search | None = ...,
        data: proto.clarifai.api.resources_pb2.Data | None = ...,
        evaluation_type: proto.clarifai.api.resources_pb2.EvaluationType.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data", b"data", "ground_truth", b"ground_truth", "search_to_eval", b"search_to_eval", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "evaluation_type", b"evaluation_type", "ground_truth", b"ground_truth", "id", b"id", "search_to_eval", b"search_to_eval", "user_app_id", b"user_app_id"]) -> None: ...

global___PostAnnotationSearchMetricsRequest = PostAnnotationSearchMetricsRequest

@typing_extensions.final
class GetAnnotationSearchMetricsRequest(google.protobuf.message.Message):
    """GetAnnotationSearchMetricsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    id: builtins.str
    """Unique custom facing id that identifies the eval to get"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetAnnotationSearchMetricsRequest = GetAnnotationSearchMetricsRequest

@typing_extensions.final
class ListAnnotationSearchMetricsRequest(google.protobuf.message.Message):
    """ListAnnotationSearchMetricsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> None: ...

global___ListAnnotationSearchMetricsRequest = ListAnnotationSearchMetricsRequest

@typing_extensions.final
class MultiAnnotationSearchMetricsResponse(google.protobuf.message.Message):
    """MultiAnnotationSearchMetricsResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    ANNOTATION_SEARCH_METRICS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """Status of the request"""
    @property
    def annotation_search_metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.AnnotationSearchMetrics]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        annotation_search_metrics: collections.abc.Iterable[proto.clarifai.api.resources_pb2.AnnotationSearchMetrics] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_search_metrics", b"annotation_search_metrics", "status", b"status"]) -> None: ...

global___MultiAnnotationSearchMetricsResponse = MultiAnnotationSearchMetricsResponse

@typing_extensions.final
class ListAnnotationFiltersRequest(google.protobuf.message.Message):
    """ListAnnotationFiltersRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListAnnotationFiltersRequest = ListAnnotationFiltersRequest

@typing_extensions.final
class GetAnnotationFilterRequest(google.protobuf.message.Message):
    """GetAnnotationFilterRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ANNOTATION_FILTER_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    annotation_filter_id: builtins.str
    """Identify annotation filter by id."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        annotation_filter_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_filter_id", b"annotation_filter_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetAnnotationFilterRequest = GetAnnotationFilterRequest

@typing_extensions.final
class PostAnnotationFiltersRequest(google.protobuf.message.Message):
    """Request to add one or more annotation filters."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ANNOTATION_FILTERS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def annotation_filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.AnnotationFilter]:
        """List of annotation filters that are requested to be added."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        annotation_filters: collections.abc.Iterable[proto.clarifai.api.resources_pb2.AnnotationFilter] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_filters", b"annotation_filters", "user_app_id", b"user_app_id"]) -> None: ...

global___PostAnnotationFiltersRequest = PostAnnotationFiltersRequest

@typing_extensions.final
class PatchAnnotationFiltersRequest(google.protobuf.message.Message):
    """Request to patch several annotation filters."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ANNOTATION_FILTERS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def annotation_filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.AnnotationFilter]:
        """List of annotation filters that are requested to be updated."""
    action: builtins.str
    """The action to perform on the patched objects
    For now, only 'overwrite' action is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        annotation_filters: collections.abc.Iterable[proto.clarifai.api.resources_pb2.AnnotationFilter] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "annotation_filters", b"annotation_filters", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchAnnotationFiltersRequest = PatchAnnotationFiltersRequest

@typing_extensions.final
class DeleteAnnotationFiltersRequest(google.protobuf.message.Message):
    """Request to delete several annotation filters by list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ANNOTATION_FILTER_IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def annotation_filter_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Specify which filters to delete."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        annotation_filter_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_filter_ids", b"annotation_filter_ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteAnnotationFiltersRequest = DeleteAnnotationFiltersRequest

@typing_extensions.final
class MultiAnnotationFilterResponse(google.protobuf.message.Message):
    """MultiAnnotationFilterResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    ANNOTATION_FILTERS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def annotation_filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.AnnotationFilter]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        annotation_filters: collections.abc.Iterable[proto.clarifai.api.resources_pb2.AnnotationFilter] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_filters", b"annotation_filters", "status", b"status"]) -> None: ...

global___MultiAnnotationFilterResponse = MultiAnnotationFilterResponse

@typing_extensions.final
class SingleAnnotationFilterResponse(google.protobuf.message.Message):
    """SingleAnnotationFilterResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    ANNOTATION_FILTER_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def annotation_filter(self) -> proto.clarifai.api.resources_pb2.AnnotationFilter: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        annotation_filter: proto.clarifai.api.resources_pb2.AnnotationFilter | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["annotation_filter", b"annotation_filter", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_filter", b"annotation_filter", "status", b"status"]) -> None: ...

global___SingleAnnotationFilterResponse = SingleAnnotationFilterResponse

@typing_extensions.final
class GetUserRequest(google.protobuf.message.Message):
    """GetUserRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """we used to have user_id but moved to the standard convention. Since this endpoint
        hasn't been exposed and only used by portal as a url this won't effect anything external.
        """
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "user_app_id", b"user_app_id"]) -> None: ...

global___GetUserRequest = GetUserRequest

@typing_extensions.final
class SingleUserResponse(google.protobuf.message.Message):
    """SingleUserResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def user(self) -> proto.clarifai.api.resources_pb2.User: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        user: proto.clarifai.api.resources_pb2.User | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status", "user", b"user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "user", b"user"]) -> None: ...

global___SingleUserResponse = SingleUserResponse

@typing_extensions.final
class PostValidatePasswordRequest(google.protobuf.message.Message):
    """PostValidatePasswordRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def password(self) -> proto.clarifai.api.resources_pb2.Password:
        """password to be validated"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        password: proto.clarifai.api.resources_pb2.Password | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["password", b"password", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["password", b"password", "user_app_id", b"user_app_id"]) -> None: ...

global___PostValidatePasswordRequest = PostValidatePasswordRequest

@typing_extensions.final
class SinglePasswordValidationResponse(google.protobuf.message.Message):
    """SinglePasswordValidationResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    PASSWORD_VIOLATIONS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """Standard clarifai status code"""
    @property
    def password_violations(self) -> proto.clarifai.api.resources_pb2.PasswordViolations: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        password_violations: proto.clarifai.api.resources_pb2.PasswordViolations | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["password_violations", b"password_violations", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["password_violations", b"password_violations", "status", b"status"]) -> None: ...

global___SinglePasswordValidationResponse = SinglePasswordValidationResponse

@typing_extensions.final
class GetWorkflowRequest(google.protobuf.message.Message):
    """GetWorkflowRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    FAVOR_CLARIFAI_WORKFLOWS_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    EXCLUDE_CLARIFAI_WORKFLOWS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    workflow_id: builtins.str
    """Workflow ID to retrieve
    If no ID is specified we return default workflow of the application
    If an ID is specified by default we first looks into Clarifai workflows for a Workflow ID
    """
    favor_clarifai_workflows: builtins.bool
    """Use this flag to look into clarifai published workflows first for a Workflow ID"""
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars"""
    exclude_clarifai_workflows: builtins.bool
    """if true will not expand search to clarifai workflows"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflow_id: builtins.str = ...,
        favor_clarifai_workflows: builtins.bool = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
        exclude_clarifai_workflows: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "exclude_clarifai_workflows", b"exclude_clarifai_workflows", "favor_clarifai_workflows", b"favor_clarifai_workflows", "user_app_id", b"user_app_id", "workflow_id", b"workflow_id"]) -> None: ...

global___GetWorkflowRequest = GetWorkflowRequest

@typing_extensions.final
class ListWorkflowsRequest(google.protobuf.message.Message):
    """ListWorkflowsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    SORT_ASCENDING_FIELD_NUMBER: builtins.int
    SORT_BY_ID_FIELD_NUMBER: builtins.int
    SORT_BY_MODIFIED_AT_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    FEATURED_ONLY_FIELD_NUMBER: builtins.int
    STARRED_ONLY_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    SEARCH_TERM_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    sort_ascending: builtins.bool
    """Sorting options:
    Whether to sort in ascending order. If false, will order in descending order.
    """
    sort_by_id: builtins.bool
    """Whether to order by the name"""
    sort_by_modified_at: builtins.bool
    """Whether to order by the modified_at time.
    If neither sort option is set to true, will sort by modified_at.
    """
    query: builtins.str
    """Query various text fields that can contain the words in the query string."""
    id: builtins.str
    """Filter by the id of the workflow. This supports wilcard queries like "gen*" to match "general" as an example.
    Deprecated in favor of query
    """
    featured_only: builtins.bool
    """If true, we only return workflows that are handpicked by clarifai staff"""
    starred_only: builtins.bool
    """If true, we only return workflows that are starred by the requesting user"""
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """(optional URL parameter) List of additional fields to be included in the response. Currently supported: all, stars"""
    search_term: builtins.str
    """(optional) search_term. Full text and prefix matching on description, id, owner id. Searchable fields may be added"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        sort_ascending: builtins.bool = ...,
        sort_by_id: builtins.bool = ...,
        sort_by_modified_at: builtins.bool = ...,
        query: builtins.str = ...,
        id: builtins.str = ...,
        featured_only: builtins.bool = ...,
        starred_only: builtins.bool = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
        search_term: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sort_by", b"sort_by", "sort_by_id", b"sort_by_id", "sort_by_modified_at", b"sort_by_modified_at", "user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "featured_only", b"featured_only", "id", b"id", "page", b"page", "per_page", b"per_page", "query", b"query", "search_term", b"search_term", "sort_ascending", b"sort_ascending", "sort_by", b"sort_by", "sort_by_id", b"sort_by_id", "sort_by_modified_at", b"sort_by_modified_at", "starred_only", b"starred_only", "user_app_id", b"user_app_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["sort_by", b"sort_by"]) -> typing_extensions.Literal["sort_by_id", "sort_by_modified_at"] | None: ...

global___ListWorkflowsRequest = ListWorkflowsRequest

@typing_extensions.final
class PostWorkflowsRequest(google.protobuf.message.Message):
    """PostWorkflowsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOWS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def workflows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Workflow]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflows: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Workflow] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id", "workflows", b"workflows"]) -> None: ...

global___PostWorkflowsRequest = PostWorkflowsRequest

@typing_extensions.final
class PatchWorkflowsRequest(google.protobuf.message.Message):
    """PatchWorkflowsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOWS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def workflows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Workflow]: ...
    action: builtins.str
    """The action to perform on the patched objects
    For now actions 'merge', 'overwrite', and 'remove' are supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflows: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Workflow] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "user_app_id", b"user_app_id", "workflows", b"workflows"]) -> None: ...

global___PatchWorkflowsRequest = PatchWorkflowsRequest

@typing_extensions.final
class PatchWorkflowIdsRequest(google.protobuf.message.Message):
    """PatchWorkflowIdsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IdUpdateSource]:
        """Array containing 1 entry"""
    action: builtins.str
    """The action to perform on the patched objects
    Only 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[global___IdUpdateSource] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchWorkflowIdsRequest = PatchWorkflowIdsRequest

@typing_extensions.final
class DeleteWorkflowRequest(google.protobuf.message.Message):
    """DeleteWorkflowRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    workflow_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflow_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id", "workflow_id", b"workflow_id"]) -> None: ...

global___DeleteWorkflowRequest = DeleteWorkflowRequest

@typing_extensions.final
class DeleteWorkflowsRequest(google.protobuf.message.Message):
    """Request to delete several things by the list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    DELETE_ALL_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    delete_all: builtins.bool
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
        delete_all: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["delete_all", b"delete_all", "ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteWorkflowsRequest = DeleteWorkflowsRequest

@typing_extensions.final
class SingleWorkflowResponse(google.protobuf.message.Message):
    """SingleWorkflowResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    WORKFLOW_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def workflow(self) -> proto.clarifai.api.resources_pb2.Workflow: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        workflow: proto.clarifai.api.resources_pb2.Workflow | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status", "workflow", b"workflow"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "workflow", b"workflow"]) -> None: ...

global___SingleWorkflowResponse = SingleWorkflowResponse

@typing_extensions.final
class MultiWorkflowResponse(google.protobuf.message.Message):
    """MultiWorkflowResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    WORKFLOWS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def workflows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Workflow]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        workflows: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Workflow] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "workflows", b"workflows"]) -> None: ...

global___MultiWorkflowResponse = MultiWorkflowResponse

@typing_extensions.final
class PostWorkflowResultsRequest(google.protobuf.message.Message):
    """PostWorkflowResultsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    OUTPUT_CONFIG_FIELD_NUMBER: builtins.int
    FAVOR_CLARIFAI_WORKFLOWS_FIELD_NUMBER: builtins.int
    WORKFLOW_STATE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    workflow_id: builtins.str
    """Workflow ID to retrieve
    If no ID is specified we return default workflow of the application
    If an ID is specified by default we first looks into Clarifai workflows for a Workflow ID
    """
    version_id: builtins.str
    """Workflow version ID to retrieve
    If no ID is specified, latest workflow version is used
    """
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Input]: ...
    @property
    def output_config(self) -> proto.clarifai.api.resources_pb2.OutputConfig:
        """FIXME(zeiler): the request for post workflows is using an outputconfig object that is supposed
        to be within models. This is not consistent with setting this on the request for post model
        outputs where it is inside a model object. To make this consistent we would send in the
        workflow object so that each model can have it's own output config. If nobody is setting
        this OutputConfig it would probably be easier to just remove it for now to keep things simpler
        and then it's more consistent we just don't support the OutputConfig on workflows.
        """
    favor_clarifai_workflows: builtins.bool
    """Use this flag to look into clarifai published workflows first for a Workflow ID"""
    @property
    def workflow_state(self) -> proto.clarifai.api.resources_pb2.WorkflowState:
        """A workflow state to be maintained across PostWorkflowResults requests/responses.
        If it is not sent in the initial request with workflow_state.id = "init" then no
        state will be saved or returned in PostWorkflowResultsResponse.
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflow_id: builtins.str = ...,
        version_id: builtins.str = ...,
        inputs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Input] | None = ...,
        output_config: proto.clarifai.api.resources_pb2.OutputConfig | None = ...,
        favor_clarifai_workflows: builtins.bool = ...,
        workflow_state: proto.clarifai.api.resources_pb2.WorkflowState | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["output_config", b"output_config", "user_app_id", b"user_app_id", "workflow_state", b"workflow_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["favor_clarifai_workflows", b"favor_clarifai_workflows", "inputs", b"inputs", "output_config", b"output_config", "user_app_id", b"user_app_id", "version_id", b"version_id", "workflow_id", b"workflow_id", "workflow_state", b"workflow_state"]) -> None: ...

global___PostWorkflowResultsRequest = PostWorkflowResultsRequest

@typing_extensions.final
class PostWorkflowResultsResponse(google.protobuf.message.Message):
    """PostWorkflowResultsResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    WORKFLOW_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    WORKFLOW_STATE_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The status of the request."""
    @property
    def workflow(self) -> proto.clarifai.api.resources_pb2.Workflow:
        """The workflow that was used in predictions with PostWorkflowResults"""
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.WorkflowResult]:
        """The resulting predictions of all models in the workflow."""
    @property
    def workflow_state(self) -> proto.clarifai.api.resources_pb2.WorkflowState:
        """A workflow state to be maintained across PostWorkflowResults requests/responses.
        This WorkflowState should be passed in to subsequent PostWorkflowResults calls
        if you want to keep track of state across requests.
        If no WorkflowState was initialized in a request then no WorkflowState will be returned in this
        response.
        """
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        workflow: proto.clarifai.api.resources_pb2.Workflow | None = ...,
        results: collections.abc.Iterable[proto.clarifai.api.resources_pb2.WorkflowResult] | None = ...,
        workflow_state: proto.clarifai.api.resources_pb2.WorkflowState | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status", "workflow", b"workflow", "workflow_state", b"workflow_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["results", b"results", "status", b"status", "workflow", b"workflow", "workflow_state", b"workflow_state"]) -> None: ...

global___PostWorkflowResultsResponse = PostWorkflowResultsResponse

@typing_extensions.final
class PostWorkflowResultsSimilarityRequest(google.protobuf.message.Message):
    """PostWorkflowResultsSimilarityRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    VERSION_ID_FIELD_NUMBER: builtins.int
    MODEL_VERSION_ID_FIELD_NUMBER: builtins.int
    PROBE_INPUTS_FIELD_NUMBER: builtins.int
    POOL_INPUTS_FIELD_NUMBER: builtins.int
    FAVOR_CLARIFAI_WORKFLOWS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    workflow_id: builtins.str
    version_id: builtins.str
    """Workflow version ID to retrieve
    If no ID is specified, latest workflow version is used
    """
    model_version_id: builtins.str
    """The specific model version whose outputs we are comparing"""
    @property
    def probe_inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Input]:
        """Each probe is compared against every pool input"""
    @property
    def pool_inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Input]:
        """Each pool input is compared against ever probe input"""
    favor_clarifai_workflows: builtins.bool
    """Use this flag to look into clarifai published workflows first for a Workflow ID"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflow_id: builtins.str = ...,
        version_id: builtins.str = ...,
        model_version_id: builtins.str = ...,
        probe_inputs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Input] | None = ...,
        pool_inputs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Input] | None = ...,
        favor_clarifai_workflows: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["favor_clarifai_workflows", b"favor_clarifai_workflows", "model_version_id", b"model_version_id", "pool_inputs", b"pool_inputs", "probe_inputs", b"probe_inputs", "user_app_id", b"user_app_id", "version_id", b"version_id", "workflow_id", b"workflow_id"]) -> None: ...

global___PostWorkflowResultsSimilarityRequest = PostWorkflowResultsSimilarityRequest

@typing_extensions.final
class PostWorkflowResultsSimilarityResponse(google.protobuf.message.Message):
    """PostWorkflowResultsSimilarityResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.WorkflowResultsSimilarity]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        results: collections.abc.Iterable[proto.clarifai.api.resources_pb2.WorkflowResultsSimilarity] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["results", b"results", "status", b"status"]) -> None: ...

global___PostWorkflowResultsSimilarityResponse = PostWorkflowResultsSimilarityResponse

@typing_extensions.final
class ListWorkflowVersionsRequest(google.protobuf.message.Message):
    """ListWorkflowVersionsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    workflow_id: builtins.str
    """List versions for the workflow identified by this id"""
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflow_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id", "workflow_id", b"workflow_id"]) -> None: ...

global___ListWorkflowVersionsRequest = ListWorkflowVersionsRequest

@typing_extensions.final
class GetWorkflowVersionRequest(google.protobuf.message.Message):
    """GetWorkflowVersionRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_VERSION_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    workflow_id: builtins.str
    """The id of the workflow that has the requested version."""
    workflow_version_id: builtins.str
    """Get the identified by this id"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflow_id: builtins.str = ...,
        workflow_version_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id", "workflow_id", b"workflow_id", "workflow_version_id", b"workflow_version_id"]) -> None: ...

global___GetWorkflowVersionRequest = GetWorkflowVersionRequest

@typing_extensions.final
class DeleteWorkflowVersionsRequest(google.protobuf.message.Message):
    """DeleteWorkflowVersionsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_VERSION_IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    workflow_id: builtins.str
    """The id of the workflow that has the requested versions to delete."""
    @property
    def workflow_version_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Delete the versions identified by these ids"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflow_id: builtins.str = ...,
        workflow_version_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id", "workflow_id", b"workflow_id", "workflow_version_ids", b"workflow_version_ids"]) -> None: ...

global___DeleteWorkflowVersionsRequest = DeleteWorkflowVersionsRequest

@typing_extensions.final
class PatchWorkflowVersionsRequest(google.protobuf.message.Message):
    """PatchWorkflowVersionsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    WORKFLOW_VERSIONS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    workflow_id: builtins.str
    """The id of the workflow that has the requested versions to patch."""
    @property
    def workflow_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.WorkflowVersion]:
        """Patch these versions."""
    action: builtins.str
    """The action to perform on the patched objects
    For now actions 'merge', 'overwrite', and 'remove' are supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        workflow_id: builtins.str = ...,
        workflow_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.WorkflowVersion] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "user_app_id", b"user_app_id", "workflow_id", b"workflow_id", "workflow_versions", b"workflow_versions"]) -> None: ...

global___PatchWorkflowVersionsRequest = PatchWorkflowVersionsRequest

@typing_extensions.final
class MultiWorkflowVersionResponse(google.protobuf.message.Message):
    """MultiWorkflowVersionResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    WORKFLOW_VERSIONS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def workflow_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.WorkflowVersion]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        workflow_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.WorkflowVersion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "workflow_versions", b"workflow_versions"]) -> None: ...

global___MultiWorkflowVersionResponse = MultiWorkflowVersionResponse

@typing_extensions.final
class SingleWorkflowVersionResponse(google.protobuf.message.Message):
    """SingleWorkflowVersionResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    WORKFLOW_VERSION_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def workflow_version(self) -> proto.clarifai.api.resources_pb2.WorkflowVersion: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        workflow_version: proto.clarifai.api.resources_pb2.WorkflowVersion | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status", "workflow_version", b"workflow_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "workflow_version", b"workflow_version"]) -> None: ...

global___SingleWorkflowVersionResponse = SingleWorkflowVersionResponse

@typing_extensions.final
class PostAppDuplicationsRequest(google.protobuf.message.Message):
    """Request to start a app duplication process"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    APP_DUPLICATIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def app_duplications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.AppDuplication]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        app_duplications: collections.abc.Iterable[proto.clarifai.api.resources_pb2.AppDuplication] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_duplications", b"app_duplications", "user_app_id", b"user_app_id"]) -> None: ...

global___PostAppDuplicationsRequest = PostAppDuplicationsRequest

@typing_extensions.final
class GetAppDuplicationRequest(google.protobuf.message.Message):
    """Request to check app duplication status"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    APP_DUPLICATION_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    app_duplication_id: builtins.str
    """The app duplication id"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        app_duplication_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_duplication_id", b"app_duplication_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetAppDuplicationRequest = GetAppDuplicationRequest

@typing_extensions.final
class ListAppDuplicationsRequest(google.protobuf.message.Message):
    """Request to list all the app duplication that user triggered."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListAppDuplicationsRequest = ListAppDuplicationsRequest

@typing_extensions.final
class MultiAppDuplicationsResponse(google.protobuf.message.Message):
    """MultiAppDuplicationsResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    APP_DUPLICATIONS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def app_duplications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.AppDuplication]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        app_duplications: collections.abc.Iterable[proto.clarifai.api.resources_pb2.AppDuplication] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_duplications", b"app_duplications", "status", b"status"]) -> None: ...

global___MultiAppDuplicationsResponse = MultiAppDuplicationsResponse

@typing_extensions.final
class SingleAppDuplicationResponse(google.protobuf.message.Message):
    """SingleAppDuplicationResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    APP_DUPLICATION_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def app_duplication(self) -> proto.clarifai.api.resources_pb2.AppDuplication: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        app_duplication: proto.clarifai.api.resources_pb2.AppDuplication | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app_duplication", b"app_duplication", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_duplication", b"app_duplication", "status", b"status"]) -> None: ...

global___SingleAppDuplicationResponse = SingleAppDuplicationResponse

@typing_extensions.final
class PostTasksRequest(google.protobuf.message.Message):
    """Request to create Tasks."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    TASKS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def tasks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Task]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        tasks: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Task] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["tasks", b"tasks", "user_app_id", b"user_app_id"]) -> None: ...

global___PostTasksRequest = PostTasksRequest

@typing_extensions.final
class GetTaskRequest(google.protobuf.message.Message):
    """Request to get one task."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    task_id: builtins.str
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """(optional URL parameter) List of additional fields to be included in the response.
        Currently supported: all, worker.users, review.users.
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        task_id: builtins.str = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "task_id", b"task_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetTaskRequest = GetTaskRequest

@typing_extensions.final
class ListTasksRequest(google.protobuf.message.Message):
    """Request to list multiple tasks."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    WORKER_USER_IDS_FIELD_NUMBER: builtins.int
    REVIEW_USER_IDS_FIELD_NUMBER: builtins.int
    LABEL_ORDER_IDS_FIELD_NUMBER: builtins.int
    INCLUDING_LABEL_ORDER_TASKS_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    @property
    def worker_user_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Get tasks that have ANY user from this list assigned as worker."""
    @property
    def review_user_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Get tasks that have ANY user from this list assigned as reviewer."""
    @property
    def label_order_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Get tasks that are associated to ANY label order from this list."""
    including_label_order_tasks: builtins.bool
    """Get label order tasks as well
    It is automatically set to true if label_order_ids is set.
    """
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """(optional URL parameter) List of additional fields to be included in the response.
        Currently supported: all, worker.users, review.users.
        """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        worker_user_ids: collections.abc.Iterable[builtins.str] | None = ...,
        review_user_ids: collections.abc.Iterable[builtins.str] | None = ...,
        label_order_ids: collections.abc.Iterable[builtins.str] | None = ...,
        including_label_order_tasks: builtins.bool = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "including_label_order_tasks", b"including_label_order_tasks", "label_order_ids", b"label_order_ids", "page", b"page", "per_page", b"per_page", "review_user_ids", b"review_user_ids", "user_app_id", b"user_app_id", "worker_user_ids", b"worker_user_ids"]) -> None: ...

global___ListTasksRequest = ListTasksRequest

@typing_extensions.final
class PatchTasksRequest(google.protobuf.message.Message):
    """Request to patch a list of tasks."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    TASKS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def tasks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Task]: ...
    action: builtins.str
    """The action to perform on the patched objects
    For now actions 'merge', 'overwrite', and 'remove' are supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        tasks: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Task] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "tasks", b"tasks", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchTasksRequest = PatchTasksRequest

@typing_extensions.final
class DeleteTasksRequest(google.protobuf.message.Message):
    """Request to delete a list of tasks."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteTasksRequest = DeleteTasksRequest

@typing_extensions.final
class MultiTaskResponse(google.protobuf.message.Message):
    """Response with multiple Tasks."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    TASKS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def tasks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Task]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        tasks: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Task] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "tasks", b"tasks"]) -> None: ...

global___MultiTaskResponse = MultiTaskResponse

@typing_extensions.final
class SingleTaskResponse(google.protobuf.message.Message):
    """Response with a single Task."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    TASK_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def task(self) -> proto.clarifai.api.resources_pb2.Task: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        task: proto.clarifai.api.resources_pb2.Task | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status", "task", b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "task", b"task"]) -> None: ...

global___SingleTaskResponse = SingleTaskResponse

@typing_extensions.final
class GetTaskCountRequest(google.protobuf.message.Message):
    """GetTaskCountRequest can be used for fetching -
    1. Task annotation count per user, per status
    1. Task input (anchor annotations) count per user, per status
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    USER_IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    task_id: builtins.str
    """task_id for which count per user per status is needed"""
    @property
    def user_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """for given task_id, user_ids to filter on (optional)"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        task_id: builtins.str = ...,
        user_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["task_id", b"task_id", "user_app_id", b"user_app_id", "user_ids", b"user_ids"]) -> None: ...

global___GetTaskCountRequest = GetTaskCountRequest

@typing_extensions.final
class SingleTaskCountResponse(google.protobuf.message.Message):
    """SingleTaskCountResponse represent counts of annotations or inputs(anchor annotations) for labelers in given task"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    APP_ID_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    COUNTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    app_id: builtins.str
    task_id: builtins.str
    @property
    def counts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.TaskStatusCountPerUser]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        app_id: builtins.str = ...,
        task_id: builtins.str = ...,
        counts: collections.abc.Iterable[proto.clarifai.api.resources_pb2.TaskStatusCountPerUser] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_id", b"app_id", "counts", b"counts", "status", b"status", "task_id", b"task_id"]) -> None: ...

global___SingleTaskCountResponse = SingleTaskCountResponse

@typing_extensions.final
class PostLabelOrdersRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////////////
    Label Orders
    //////////////////////////////////////////////////////////////////////////////

    Request to create label orders.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    LABEL_ORDERS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def label_orders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.LabelOrder]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        label_orders: collections.abc.Iterable[proto.clarifai.api.resources_pb2.LabelOrder] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["label_orders", b"label_orders", "user_app_id", b"user_app_id"]) -> None: ...

global___PostLabelOrdersRequest = PostLabelOrdersRequest

@typing_extensions.final
class GetLabelOrderRequest(google.protobuf.message.Message):
    """Request to get one label order."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    LABEL_ORDER_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    label_order_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        label_order_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["label_order_id", b"label_order_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetLabelOrderRequest = GetLabelOrderRequest

@typing_extensions.final
class ListLabelOrdersRequest(google.protobuf.message.Message):
    """Request to list multiple label orders."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListLabelOrdersRequest = ListLabelOrdersRequest

@typing_extensions.final
class PatchLabelOrdersRequest(google.protobuf.message.Message):
    """Request to patch a list of label orders."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    LABEL_ORDERS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def label_orders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.LabelOrder]: ...
    action: builtins.str
    """The action to perform on the patched objects
    For now actions 'merge', 'overwrite', and 'remove' are supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        label_orders: collections.abc.Iterable[proto.clarifai.api.resources_pb2.LabelOrder] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "label_orders", b"label_orders", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchLabelOrdersRequest = PatchLabelOrdersRequest

@typing_extensions.final
class DeleteLabelOrdersRequest(google.protobuf.message.Message):
    """Request to delete a list of label orders."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteLabelOrdersRequest = DeleteLabelOrdersRequest

@typing_extensions.final
class MultiLabelOrderResponse(google.protobuf.message.Message):
    """Response with multiple label order."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    LABEL_ORDERS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def label_orders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.LabelOrder]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        label_orders: collections.abc.Iterable[proto.clarifai.api.resources_pb2.LabelOrder] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["label_orders", b"label_orders", "status", b"status"]) -> None: ...

global___MultiLabelOrderResponse = MultiLabelOrderResponse

@typing_extensions.final
class SingleLabelOrderResponse(google.protobuf.message.Message):
    """Response with a label order."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    LABEL_ORDER_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def label_order(self) -> proto.clarifai.api.resources_pb2.LabelOrder: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        label_order: proto.clarifai.api.resources_pb2.LabelOrder | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["label_order", b"label_order", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["label_order", b"label_order", "status", b"status"]) -> None: ...

global___SingleLabelOrderResponse = SingleLabelOrderResponse

@typing_extensions.final
class PostCollectorsRequest(google.protobuf.message.Message):
    """Request to create Collectors."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    COLLECTORS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def collectors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Collector]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        collectors: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Collector] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collectors", b"collectors", "user_app_id", b"user_app_id"]) -> None: ...

global___PostCollectorsRequest = PostCollectorsRequest

@typing_extensions.final
class PatchCollectorsRequest(google.protobuf.message.Message):
    """PatchCollectorsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    COLLECTORS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def collectors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Collector]: ...
    action: builtins.str
    """The action to perform on the patched objects
    Only 'overwrite' is supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        collectors: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Collector] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "collectors", b"collectors", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchCollectorsRequest = PatchCollectorsRequest

@typing_extensions.final
class DeleteCollectorsRequest(google.protobuf.message.Message):
    """Request to delete several things by the list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    DELETE_ALL_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    delete_all: builtins.bool
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
        delete_all: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["delete_all", b"delete_all", "ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteCollectorsRequest = DeleteCollectorsRequest

@typing_extensions.final
class GetCollectorRequest(google.protobuf.message.Message):
    """Request to GET a single Collector."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    COLLECTOR_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    collector_id: builtins.str
    """The collecgtor id"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        collector_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collector_id", b"collector_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetCollectorRequest = GetCollectorRequest

@typing_extensions.final
class ListCollectorsRequest(google.protobuf.message.Message):
    """Request to GET all the Collectors."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListCollectorsRequest = ListCollectorsRequest

@typing_extensions.final
class MultiCollectorResponse(google.protobuf.message.Message):
    """Response with multiple Collectors."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    COLLECTORS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def collectors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Collector]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        collectors: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Collector] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collectors", b"collectors", "status", b"status"]) -> None: ...

global___MultiCollectorResponse = MultiCollectorResponse

@typing_extensions.final
class SingleCollectorResponse(google.protobuf.message.Message):
    """Response with a single Collector."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    COLLECTOR_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def collector(self) -> proto.clarifai.api.resources_pb2.Collector: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        collector: proto.clarifai.api.resources_pb2.Collector | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["collector", b"collector", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["collector", b"collector", "status", b"status"]) -> None: ...

global___SingleCollectorResponse = SingleCollectorResponse

@typing_extensions.final
class PostStatValuesRequest(google.protobuf.message.Message):
    """PostStatValuesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    STAT_VALUES_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user and app information for the request."""
    @property
    def stat_values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.StatValue]:
        """The stats to post, can post more than one at a time."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        stat_values: collections.abc.Iterable[proto.clarifai.api.resources_pb2.StatValue] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["stat_values", b"stat_values", "user_app_id", b"user_app_id"]) -> None: ...

global___PostStatValuesRequest = PostStatValuesRequest

@typing_extensions.final
class MultiStatValueResponse(google.protobuf.message.Message):
    """MultiStatValueResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    STAT_VALUES_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The response status."""
    @property
    def stat_values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.StatValue]:
        """The returned stats values."""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        stat_values: collections.abc.Iterable[proto.clarifai.api.resources_pb2.StatValue] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["stat_values", b"stat_values", "status", b"status"]) -> None: ...

global___MultiStatValueResponse = MultiStatValueResponse

@typing_extensions.final
class PostStatValuesAggregateRequest(google.protobuf.message.Message):
    """PostStatValuesAggregateRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    STAT_VALUE_AGGREGATE_QUERIES_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """Ids present in the url of the request."""
    @property
    def stat_value_aggregate_queries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.StatValueAggregateQuery]:
        """Query to retrieve aggregate values."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        stat_value_aggregate_queries: collections.abc.Iterable[proto.clarifai.api.resources_pb2.StatValueAggregateQuery] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["stat_value_aggregate_queries", b"stat_value_aggregate_queries", "user_app_id", b"user_app_id"]) -> None: ...

global___PostStatValuesAggregateRequest = PostStatValuesAggregateRequest

@typing_extensions.final
class MultiStatValueAggregateResponse(google.protobuf.message.Message):
    """MultiStatValueAggregateResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    STAT_VALUE_AGGREGATE_RESULTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status:
        """The response status."""
    @property
    def stat_value_aggregate_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.StatValueAggregateResult]:
        """The aggregate results for each query passedin."""
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        stat_value_aggregate_results: collections.abc.Iterable[proto.clarifai.api.resources_pb2.StatValueAggregateResult] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["stat_value_aggregate_results", b"stat_value_aggregate_results", "status", b"status"]) -> None: ...

global___MultiStatValueAggregateResponse = MultiStatValueAggregateResponse

@typing_extensions.final
class PostTrendingMetricsViewRequest(google.protobuf.message.Message):
    """PostTrendingMetricsViewRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    VIEW_TYPE_FIELD_NUMBER: builtins.int
    OBJECT_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id information."""
    view_type: builtins.str
    """For now view types 'apps', 'workflows', and 'models' are supported."""
    object_id: builtins.str
    """ID of the views object."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        view_type: builtins.str = ...,
        object_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["object_id", b"object_id", "user_app_id", b"user_app_id", "view_type", b"view_type"]) -> None: ...

global___PostTrendingMetricsViewRequest = PostTrendingMetricsViewRequest

@typing_extensions.final
class ListTrendingMetricsViewsRequest(google.protobuf.message.Message):
    """ListTrendingMetricsViewsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    VIEW_TYPE_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet:
        """The user_id and app_id information."""
    view_type: builtins.str
    """For now view types 'apps', 'workflows', and 'models' are supported."""
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        view_type: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id", "view_type", b"view_type"]) -> None: ...

global___ListTrendingMetricsViewsRequest = ListTrendingMetricsViewsRequest

@typing_extensions.final
class MultiTrendingMetricsViewResponse(google.protobuf.message.Message):
    """MultiTrendingMetricsViewResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    METRICS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.TrendingMetric]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        metrics: collections.abc.Iterable[proto.clarifai.api.resources_pb2.TrendingMetric] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["metrics", b"metrics", "status", b"status"]) -> None: ...

global___MultiTrendingMetricsViewResponse = MultiTrendingMetricsViewResponse

@typing_extensions.final
class GetModuleRequest(google.protobuf.message.Message):
    """GetModuleRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODULE_ID_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    module_id: builtins.str
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        module_id: builtins.str = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "module_id", b"module_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetModuleRequest = GetModuleRequest

@typing_extensions.final
class ListModulesRequest(google.protobuf.message.Message):
    """ListModulesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    STARRED_ONLY_FIELD_NUMBER: builtins.int
    ADDITIONAL_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    starred_only: builtins.bool
    @property
    def additional_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
        starred_only: builtins.bool = ...,
        additional_fields: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_fields", b"additional_fields", "page", b"page", "per_page", b"per_page", "starred_only", b"starred_only", "user_app_id", b"user_app_id"]) -> None: ...

global___ListModulesRequest = ListModulesRequest

@typing_extensions.final
class PostModulesRequest(google.protobuf.message.Message):
    """PostModulesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODULES_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def modules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Module]:
        """This allows you to create one or more module by posting it to the API."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        modules: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Module] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["modules", b"modules", "user_app_id", b"user_app_id"]) -> None: ...

global___PostModulesRequest = PostModulesRequest

@typing_extensions.final
class PatchModulesRequest(google.protobuf.message.Message):
    """PatchModulesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODULES_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def modules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Module]: ...
    action: builtins.str
    """The action to perform on the patched objects
    For now actions 'merge', 'overwrite', and 'remove' are supported
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        modules: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Module] | None = ...,
        action: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "modules", b"modules", "user_app_id", b"user_app_id"]) -> None: ...

global___PatchModulesRequest = PatchModulesRequest

@typing_extensions.final
class DeleteModulesRequest(google.protobuf.message.Message):
    """Request to delete several things by the list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteModulesRequest = DeleteModulesRequest

@typing_extensions.final
class SingleModuleResponse(google.protobuf.message.Message):
    """SingleModuleResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODULE_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def module(self) -> proto.clarifai.api.resources_pb2.Module: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        module: proto.clarifai.api.resources_pb2.Module | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["module", b"module", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["module", b"module", "status", b"status"]) -> None: ...

global___SingleModuleResponse = SingleModuleResponse

@typing_extensions.final
class MultiModuleResponse(google.protobuf.message.Message):
    """MultiModuleResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODULES_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def modules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Module]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        modules: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Module] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["modules", b"modules", "status", b"status"]) -> None: ...

global___MultiModuleResponse = MultiModuleResponse

@typing_extensions.final
class GetModuleVersionRequest(google.protobuf.message.Message):
    """request for different endpoints currently."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODULE_ID_FIELD_NUMBER: builtins.int
    MODULE_VERSION_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    module_id: builtins.str
    module_version_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        module_id: builtins.str = ...,
        module_version_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["module_id", b"module_id", "module_version_id", b"module_version_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetModuleVersionRequest = GetModuleVersionRequest

@typing_extensions.final
class ListModuleVersionsRequest(google.protobuf.message.Message):
    """ListModuleVersionsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODULE_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    module_id: builtins.str
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        module_id: builtins.str = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["module_id", b"module_id", "page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListModuleVersionsRequest = ListModuleVersionsRequest

@typing_extensions.final
class PostModuleVersionsRequest(google.protobuf.message.Message):
    """PostModuleVersionsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODULE_ID_FIELD_NUMBER: builtins.int
    MODULE_VERSIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    module_id: builtins.str
    @property
    def module_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ModuleVersion]:
        """This allows you to create one or more module by posting it to the API."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        module_id: builtins.str = ...,
        module_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ModuleVersion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["module_id", b"module_id", "module_versions", b"module_versions", "user_app_id", b"user_app_id"]) -> None: ...

global___PostModuleVersionsRequest = PostModuleVersionsRequest

@typing_extensions.final
class DeleteModuleVersionsRequest(google.protobuf.message.Message):
    """Request to delete several module versions by the list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    MODULE_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    module_id: builtins.str
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        module_id: builtins.str = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "module_id", b"module_id", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteModuleVersionsRequest = DeleteModuleVersionsRequest

@typing_extensions.final
class SingleModuleVersionResponse(google.protobuf.message.Message):
    """SingleModuleVersionResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODULE_VERSION_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def module_version(self) -> proto.clarifai.api.resources_pb2.ModuleVersion: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        module_version: proto.clarifai.api.resources_pb2.ModuleVersion | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["module_version", b"module_version", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["module_version", b"module_version", "status", b"status"]) -> None: ...

global___SingleModuleVersionResponse = SingleModuleVersionResponse

@typing_extensions.final
class MultiModuleVersionResponse(google.protobuf.message.Message):
    """MultiModuleVersionResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    MODULE_VERSIONS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def module_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.ModuleVersion]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        module_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.ModuleVersion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["module_versions", b"module_versions", "status", b"status"]) -> None: ...

global___MultiModuleVersionResponse = MultiModuleVersionResponse

@typing_extensions.final
class GetInstalledModuleVersionRequest(google.protobuf.message.Message):
    """GetInstalledModuleVersionRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INSTALLED_MODULE_VERSION_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    installed_module_version_id: builtins.str
    """the ID to get of the install module version."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        installed_module_version_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["installed_module_version_id", b"installed_module_version_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetInstalledModuleVersionRequest = GetInstalledModuleVersionRequest

@typing_extensions.final
class ListInstalledModuleVersionsRequest(google.protobuf.message.Message):
    """ListInstalledModuleVersionsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListInstalledModuleVersionsRequest = ListInstalledModuleVersionsRequest

@typing_extensions.final
class PostInstalledModuleVersionsRequest(google.protobuf.message.Message):
    """PostInstalledModuleVersionsRequest to install a module version into the app in the URL"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INSTALLED_MODULE_VERSIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def installed_module_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.InstalledModuleVersion]:
        """This allows you to create one or more module by posting it to the API."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        installed_module_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.InstalledModuleVersion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["installed_module_versions", b"installed_module_versions", "user_app_id", b"user_app_id"]) -> None: ...

global___PostInstalledModuleVersionsRequest = PostInstalledModuleVersionsRequest

@typing_extensions.final
class PostInstalledModuleVersionsKeyRequest(google.protobuf.message.Message):
    """PostInstalledModuleVersionsKeyRequest to associate a key of the caller's to the installed module
    version.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INSTALLED_MODULE_VERSION_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    installed_module_version_id: builtins.str
    """the ID to get of the install module version.
    Note(zeiler): we don't provide a key to create since it's always deterministic.
    we'll create a PAT, owned by the caller with the scopes that the module requests.
    in the future if we want we can pass in a Key key = 3; field so that the caller
    can adjust the scopes, but for now that doesn't seem necessary.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        installed_module_version_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["installed_module_version_id", b"installed_module_version_id", "user_app_id", b"user_app_id"]) -> None: ...

global___PostInstalledModuleVersionsKeyRequest = PostInstalledModuleVersionsKeyRequest

@typing_extensions.final
class DeleteInstalledModuleVersionsRequest(google.protobuf.message.Message):
    """Request to delete several installed module versions by the list of ids."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteInstalledModuleVersionsRequest = DeleteInstalledModuleVersionsRequest

@typing_extensions.final
class SingleInstalledModuleVersionResponse(google.protobuf.message.Message):
    """SingleInstalledModuleVersionResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    INSTALLED_MODULE_VERSION_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def installed_module_version(self) -> proto.clarifai.api.resources_pb2.InstalledModuleVersion: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        installed_module_version: proto.clarifai.api.resources_pb2.InstalledModuleVersion | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["installed_module_version", b"installed_module_version", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["installed_module_version", b"installed_module_version", "status", b"status"]) -> None: ...

global___SingleInstalledModuleVersionResponse = SingleInstalledModuleVersionResponse

@typing_extensions.final
class MultiInstalledModuleVersionResponse(google.protobuf.message.Message):
    """MultiInstalledModuleVersionResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    INSTALLED_MODULE_VERSIONS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def installed_module_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.InstalledModuleVersion]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        installed_module_versions: collections.abc.Iterable[proto.clarifai.api.resources_pb2.InstalledModuleVersion] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["installed_module_versions", b"installed_module_versions", "status", b"status"]) -> None: ...

global___MultiInstalledModuleVersionResponse = MultiInstalledModuleVersionResponse

@typing_extensions.final
class ListNextTaskAssignmentsRequest(google.protobuf.message.Message):
    """ListNextTaskAssignmentsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    task_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        task_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["task_id", b"task_id", "user_app_id", b"user_app_id"]) -> None: ...

global___ListNextTaskAssignmentsRequest = ListNextTaskAssignmentsRequest

@typing_extensions.final
class PostBulkOperationsRequest(google.protobuf.message.Message):
    """Request to perform bulk operations on a list of inputs based on input source."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    BULK_OPERATIONS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def bulk_operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.BulkOperation]:
        """List of bulk operation(s) to be performed e.g bulk update metadata or tags or labels etc."""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        bulk_operations: collections.abc.Iterable[proto.clarifai.api.resources_pb2.BulkOperation] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bulk_operations", b"bulk_operations", "user_app_id", b"user_app_id"]) -> None: ...

global___PostBulkOperationsRequest = PostBulkOperationsRequest

@typing_extensions.final
class ListBulkOperationsRequest(google.protobuf.message.Message):
    """Request to list all the bulk operations."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListBulkOperationsRequest = ListBulkOperationsRequest

@typing_extensions.final
class GetBulkOperationRequest(google.protobuf.message.Message):
    """Request to get the details of a bulk operation by ID."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    id: builtins.str
    """The bulk operation id"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetBulkOperationRequest = GetBulkOperationRequest

@typing_extensions.final
class CancelBulkOperationRequest(google.protobuf.message.Message):
    """Cancel a list of bulk operation ids"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of bulk operation ids to be cancelled"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___CancelBulkOperationRequest = CancelBulkOperationRequest

@typing_extensions.final
class DeleteBulkOperationRequest(google.protobuf.message.Message):
    """Request to delete the terminated bulk operations by ID
    Only operations in terminated state can be deleted.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of bulk operation ids to be deleted"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteBulkOperationRequest = DeleteBulkOperationRequest

@typing_extensions.final
class SingleBulkOperationsResponse(google.protobuf.message.Message):
    """SingleBulkOperationsResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    BULK_OPERATION_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def bulk_operation(self) -> proto.clarifai.api.resources_pb2.BulkOperation: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        bulk_operation: proto.clarifai.api.resources_pb2.BulkOperation | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bulk_operation", b"bulk_operation", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bulk_operation", b"bulk_operation", "status", b"status"]) -> None: ...

global___SingleBulkOperationsResponse = SingleBulkOperationsResponse

@typing_extensions.final
class MultiBulkOperationsResponse(google.protobuf.message.Message):
    """MultiBulkOperationsResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    BULK_OPERATION_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def bulk_operation(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.BulkOperation]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        bulk_operation: collections.abc.Iterable[proto.clarifai.api.resources_pb2.BulkOperation] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bulk_operation", b"bulk_operation", "status", b"status"]) -> None: ...

global___MultiBulkOperationsResponse = MultiBulkOperationsResponse

@typing_extensions.final
class PutTaskAssignmentsRequest(google.protobuf.message.Message):
    """PutTaskAssignmentsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    TASK_ID_FIELD_NUMBER: builtins.int
    INPUT_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    task_id: builtins.str
    input_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        task_id: builtins.str = ...,
        input_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_id", b"input_id", "task_id", b"task_id", "user_app_id", b"user_app_id"]) -> None: ...

global___PutTaskAssignmentsRequest = PutTaskAssignmentsRequest

@typing_extensions.final
class ListInputsAddJobsRequest(google.protobuf.message.Message):
    """List all the input ingestion jobs"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListInputsAddJobsRequest = ListInputsAddJobsRequest

@typing_extensions.final
class GetInputsAddJobRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    id: builtins.str
    """id of add inputs job"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetInputsAddJobRequest = GetInputsAddJobRequest

@typing_extensions.final
class MultiInputsAddJobResponse(google.protobuf.message.Message):
    """MultiInputsAddJobResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    INPUTS_ADD_JOBS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def inputs_add_jobs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.InputsAddJob]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        inputs_add_jobs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.InputsAddJob] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs_add_jobs", b"inputs_add_jobs", "status", b"status"]) -> None: ...

global___MultiInputsAddJobResponse = MultiInputsAddJobResponse

@typing_extensions.final
class SingleInputsAddJobResponse(google.protobuf.message.Message):
    """SingleInputsAddJobResponse"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    INPUTS_ADD_JOB_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def inputs_add_job(self) -> proto.clarifai.api.resources_pb2.InputsAddJob: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        inputs_add_job: proto.clarifai.api.resources_pb2.InputsAddJob | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["inputs_add_job", b"inputs_add_job", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs_add_job", b"inputs_add_job", "status", b"status"]) -> None: ...

global___SingleInputsAddJobResponse = SingleInputsAddJobResponse

@typing_extensions.final
class PostUploadsRequest(google.protobuf.message.Message):
    """Start a multipart upload"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    UPLOADS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def uploads(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Upload]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        uploads: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Upload] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["uploads", b"uploads", "user_app_id", b"user_app_id"]) -> None: ...

global___PostUploadsRequest = PostUploadsRequest

@typing_extensions.final
class DeleteUploadsRequest(google.protobuf.message.Message):
    """Stops or deletes multipart upload"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___DeleteUploadsRequest = DeleteUploadsRequest

@typing_extensions.final
class ListUploadsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListUploadsRequest = ListUploadsRequest

@typing_extensions.final
class GetUploadRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    UPLOAD_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    upload_id: builtins.str
    """Upload ID"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        upload_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["upload_id", b"upload_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetUploadRequest = GetUploadRequest

@typing_extensions.final
class SingleUploadResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    UPLOAD_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def upload(self) -> proto.clarifai.api.resources_pb2.Upload: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        upload: proto.clarifai.api.resources_pb2.Upload | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status", "upload", b"upload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "upload", b"upload"]) -> None: ...

global___SingleUploadResponse = SingleUploadResponse

@typing_extensions.final
class MultiUploadResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    UPLOADS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def uploads(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.Upload]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        uploads: collections.abc.Iterable[proto.clarifai.api.resources_pb2.Upload] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "uploads", b"uploads"]) -> None: ...

global___MultiUploadResponse = MultiUploadResponse

@typing_extensions.final
class PutUploadContentPartsRequest(google.protobuf.message.Message):
    """Upload a part of a multipart upload.
    Behaviour on completion depends on the endpoint that was used to initiate the upload.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    UPLOAD_ID_FIELD_NUMBER: builtins.int
    CONTENT_PARTS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    upload_id: builtins.str
    @property
    def content_parts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.UploadContentPart]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        upload_id: builtins.str = ...,
        content_parts: collections.abc.Iterable[proto.clarifai.api.resources_pb2.UploadContentPart] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["content_parts", b"content_parts", "upload_id", b"upload_id", "user_app_id", b"user_app_id"]) -> None: ...

global___PutUploadContentPartsRequest = PutUploadContentPartsRequest

@typing_extensions.final
class PostInputsDataSourcesRequest(google.protobuf.message.Message):
    """Initiates retrieval of inputs from cloud storage from a user provided data source.
    Will create and return an inputs-add-job for tracking progress.
    Archives will be extracted and their contents will be processed as inputs.

    The cloud URL will be treated as a filter prefix. For example s3:/bucket/images_folder/abc will process
    files in the images_folder beginning with abc or in a subfolder beginning with abc.
    For example:
    bucket/images_folder/abcImage.png
    bucket/images_folder/abc-1/Data.zip

    If given URL is for a private bucket or file, then credentials should be provided to access the bucket.
    Credentials should include rights to list the objects in the bucket, except when pointed directly at a file archive,
    in which case it only requires rights to access that particular file.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    DATA_SOURCES_FIELD_NUMBER: builtins.int
    CALL_BACK_URL_FIELD_NUMBER: builtins.int
    APP_PAT_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def data_sources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.InputsDataSource]: ...
    call_back_url: builtins.str
    """If call back url is set, we will send a Post request to this endpoint with job status."""
    app_pat: builtins.str
    """Personal Access Token to the application to which inputs are added"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        data_sources: collections.abc.Iterable[proto.clarifai.api.resources_pb2.InputsDataSource] | None = ...,
        call_back_url: builtins.str = ...,
        app_pat: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_pat", b"app_pat", "call_back_url", b"call_back_url", "data_sources", b"data_sources", "user_app_id", b"user_app_id"]) -> None: ...

global___PostInputsDataSourcesRequest = PostInputsDataSourcesRequest

@typing_extensions.final
class GetInputsExtractionJobRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INPUTS_EXTRACTION_JOB_ID_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    inputs_extraction_job_id: builtins.str
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        inputs_extraction_job_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs_extraction_job_id", b"inputs_extraction_job_id", "user_app_id", b"user_app_id"]) -> None: ...

global___GetInputsExtractionJobRequest = GetInputsExtractionJobRequest

@typing_extensions.final
class ListInputsExtractionJobsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    PAGE_FIELD_NUMBER: builtins.int
    PER_PAGE_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    page: builtins.int
    """(optional URL parameter) The page number. Pagination is used to split the results into chunks.
    Defaults to 1.
    """
    per_page: builtins.int
    """(optional URL parameter) The number of results that will be contained in each page. Defaults
    to 128.
    """
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        page: builtins.int = ...,
        per_page: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page", b"page", "per_page", b"per_page", "user_app_id", b"user_app_id"]) -> None: ...

global___ListInputsExtractionJobsRequest = ListInputsExtractionJobsRequest

@typing_extensions.final
class SingleInputsExtractionJobResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    INPUTS_EXTRACTION_JOB_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def inputs_extraction_job(self) -> proto.clarifai.api.resources_pb2.InputsExtractionJob: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        inputs_extraction_job: proto.clarifai.api.resources_pb2.InputsExtractionJob | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["inputs_extraction_job", b"inputs_extraction_job", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs_extraction_job", b"inputs_extraction_job", "status", b"status"]) -> None: ...

global___SingleInputsExtractionJobResponse = SingleInputsExtractionJobResponse

@typing_extensions.final
class MultiInputsExtractionJobResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    INPUTS_EXTRACTION_JOBS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> proto.clarifai.api.status.status_pb2.Status: ...
    @property
    def inputs_extraction_jobs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.InputsExtractionJob]: ...
    def __init__(
        self,
        *,
        status: proto.clarifai.api.status.status_pb2.Status | None = ...,
        inputs_extraction_jobs: collections.abc.Iterable[proto.clarifai.api.resources_pb2.InputsExtractionJob] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs_extraction_jobs", b"inputs_extraction_jobs", "status", b"status"]) -> None: ...

global___MultiInputsExtractionJobResponse = MultiInputsExtractionJobResponse

@typing_extensions.final
class CancelInputsExtractionJobsRequest(google.protobuf.message.Message):
    """Cancel a list of extraction job ids"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of extraction job ids to be cancelled"""
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids", b"ids", "user_app_id", b"user_app_id"]) -> None: ...

global___CancelInputsExtractionJobsRequest = CancelInputsExtractionJobsRequest

@typing_extensions.final
class PostInputsUploadsRequest(google.protobuf.message.Message):
    """Start uploading a file archive containing inputs.
    Will create and return an inputs-add-job for tracking progress.

    Associated inputs-add-job contains an upload id which should be completed through `PutUploadContentParts` endpoint.
    Completing the upload will automatically begin unpacking the archive and uploading the contents as inputs.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_APP_ID_FIELD_NUMBER: builtins.int
    INPUTS_UPLOADS_FIELD_NUMBER: builtins.int
    @property
    def user_app_id(self) -> proto.clarifai.api.resources_pb2.UserAppIDSet: ...
    @property
    def inputs_uploads(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[proto.clarifai.api.resources_pb2.InputsUpload]: ...
    def __init__(
        self,
        *,
        user_app_id: proto.clarifai.api.resources_pb2.UserAppIDSet | None = ...,
        inputs_uploads: collections.abc.Iterable[proto.clarifai.api.resources_pb2.InputsUpload] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user_app_id", b"user_app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs_uploads", b"inputs_uploads", "user_app_id", b"user_app_id"]) -> None: ...

global___PostInputsUploadsRequest = PostInputsUploadsRequest
